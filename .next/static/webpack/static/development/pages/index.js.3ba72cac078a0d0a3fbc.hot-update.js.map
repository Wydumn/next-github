{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.3ba72cac078a0d0a3fbc.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { useEffect } from 'react'\r\nimport { Button, Icon, Tabs } from 'antd'\r\nimport getConfig from 'next/config'\r\nimport { connect } from 'react-redux'\r\nimport Router, { withRouter } from 'next/router'\r\nimport LRU  from 'lru-cache'\r\n\r\nimport Repo from '../components/Repo'\r\n\r\nconst cache = new LRU({\r\n    maxAge: 1000 * 60 * 10\r\n})\r\n\r\nconst api = require('../lib/api')\r\n\r\nconst { publicRuntimeConfig } = getConfig()\r\n\r\nlet cachedUserRepos, cachedUserStarredRepos\r\n\r\nconst isServer = typeof window === 'undefined'\r\n\r\nfunction Index ({ userRepos, userStarredRepos, user, router}) {\r\n    // console.log(userRepos, userStarredRepos)\r\n\r\n    const tabKey = router.query.key || '1' \r\n\r\n    const handleTabChange = (activeKey) => {\r\n        Router.push(`/?key=${activeKey}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!isServer) {    \r\n            // cachedUserRepos = userRepos.data\r\n            // cachedUserStarredRepos = userStarredRepos.data\r\n            if (userRepos) {\r\n                cache.set('userRepos', userRepos)\r\n                cache.set('userStarredRepos', userStarredRepos)\r\n            }\r\n            if (userStarredRepos) {}\r\n        }\r\n    }, [userRepos, userStarredRepos])\r\n\r\n    if (!user || !user.id) {\r\n        return (\r\n            <div className='root'>\r\n                <p>您还没有登录</p>\r\n                <Button type=\"primary\" href={publicRuntimeConfig.OAUTH_URL}>\r\n                    点击登录\r\n                </Button>\r\n                <style jsx>{`\r\n                    .root {\r\n                        height: 400px;\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                    }    \r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"root\">\r\n            <div className=\"user-info\">\r\n                <img src={user.avatar_url} alt=\"user avatar\" className=\"avatar\" />\r\n                <span className=\"login\">{user.login}</span>\r\n                <span className=\"name\">{user.name}</span>\r\n                <span className=\"bio\">{user.bio}</span>\r\n                <p className=\"email\">\r\n                    <Icon type=\"mail\" style={{ marginRight: 10 }} />\r\n                    <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </p>\r\n            </div>\r\n            <div className=\"user-repos\">\r\n                <Tabs activeKey={tabKey} onChange={handleTabChange} animated={false}>\r\n                    <Tabs.TabPane tab=\"你的仓库\" key=\"1\">\r\n                        {userRepos.map(repo => (\r\n                            <Repo key={repo.id} repo={repo} />\r\n                        ))}\r\n                    </Tabs.TabPane>\r\n                    <Tabs.TabPane tab=\"你关注的仓库\" key=\"2\">\r\n                        {userStarredRepos.map(repo => (\r\n                            <Repo key={repo.id} repo={repo} />\r\n                        ))}\r\n                    </Tabs.TabPane>\r\n                </Tabs>\r\n            </div>\r\n            <style jsx>{`\r\n                .root {\r\n                    display: flex;\r\n                    align-items: flex-start;\r\n                    padding: 20px 0;\r\n                }    \r\n                .user-info {\r\n                    width: 200px;\r\n                    margin-right: 40px;\r\n                    flex-shrink: 0;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                }\r\n                .login {\r\n                    font-weight: 800;\r\n                    font-size: 20px;\r\n                    margin-top: 20px;\r\n                }\r\n                .name {\r\n                    font-size: 16px;\r\n                    color: #777;\r\n                }\r\n                .bio {\r\n                    margin-top: 20px;\r\n                    color: #333;\r\n                }\r\n                .avatar {\r\n                    width: 100%;\r\n                    border-radius: 5px;  \r\n                }\r\n                .user-repos {\r\n                    flex-grow: 1;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    )\r\n}\r\n\r\nIndex.getInitialProps = async ({ ctx, reduxStore }) => {\r\n    const user = reduxStore.getState().user\r\n    if (!user || !user.id) {\r\n        return {\r\n            isLogin: false\r\n        }\r\n    }\r\n\r\n    if (!isServer) {\r\n        if (cache.get('userRepos') && cache.get('userStarredRepos')) {\r\n            return {\r\n                userRepos: cache.get('userRepos'),\r\n                userStarredRepos: cache.get('userStarredRepos'),\r\n            }\r\n        }\r\n    }\r\n\r\n    // 获取仓库\r\n    const userRepos = await api.request({\r\n        url: '/user/repos'\r\n    }, ctx.req, ctx.res)\r\n\r\n    // 获取认证用户Star的仓库\r\n    const userStarredRepos = await api.request({\r\n        url: '/user/starred'\r\n    }, ctx.req, ctx.res)\r\n\r\n    return {\r\n        isLogin: true,\r\n        userRepos: userRepos.data,\r\n        userStarredRepos: userStarredRepos.data\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(function mapStateToProps(state) {\r\n    return {\r\n        user: state.user,\r\n    }\r\n})(Index))"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AADA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAgBA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAnBA;AAAA;AA6DA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AADA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAWA;AACA;AAFA;AACA;AAXA;AAAA;AAAA;AAmBA;AADA;AACA;AAnBA;AAkBA;AAlBA;AAAA;AAwBA;AADA;AACA;AAxBA;AAuBA;AAvBA;AA4BA;AACA;AACA;AAHA;AACA;AA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAiCA;AACA;AACA;AADA;AAGA;;;;A","sourceRoot":""}