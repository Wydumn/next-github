{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport axios from 'axios';\nconst userInitialState = {};\n\nfunction userReducer(state = userInitialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\nconst allReducers = combineReducers({\n  user: userReducer\n}); // 每次调用都生成一个新的store\n\nexport default function initializeStore(state) {\n  const store = createStore(allReducers, _Object$assign({}, {\n    user: userInitialState\n  }, state), composeWithDevTools(applyMiddleware(ReduxThunk)));\n  return store;\n}","map":{"version":3,"sources":["D:/Project/interview/blog/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","ReduxThunk","composeWithDevTools","axios","userInitialState","userReducer","state","action","type","allReducers","user","initializeStore","store"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,gBAAgB,GAAG,EAAzB;;AAEA,SAASC,WAAT,CAAsBC,KAAK,GAAGF,gBAA9B,EAAgDG,MAAhD,EAAwD;AACpD,UAAOA,MAAM,CAACC,IAAd;AACI;AACI,aAAOF,KAAP;AAFR;AAIH;;AAED,MAAMG,WAAW,GAAGV,eAAe,CAAC;AAChCW,EAAAA,IAAI,EAAEL;AAD0B,CAAD,CAAnC,C,CAMA;;AACA,eAAe,SAASM,eAAT,CAAyBL,KAAzB,EAAgC;AAC3C,QAAMM,KAAK,GAAGd,WAAW,CACrBW,WADqB,EAErB,eAAc,EAAd,EAAkB;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAlB,EAA6CE,KAA7C,CAFqB,EAGrBJ,mBAAmB,CAACF,eAAe,CAACC,UAAD,CAAhB,CAHE,CAAzB;AAMA,SAAOW,KAAP;AACH","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport axios from 'axios'\r\n\r\nconst userInitialState = {}\r\n\r\nfunction userReducer( state = userInitialState, action) {\r\n    switch(action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst allReducers = combineReducers({\r\n    user: userReducer\r\n})\r\n\r\n\r\n\r\n// 每次调用都生成一个新的store\r\nexport default function initializeStore(state) {\r\n    const store = createStore(\r\n        allReducers, \r\n        Object.assign({}, { user: userInitialState}, state),\r\n        composeWithDevTools(applyMiddleware(ReduxThunk))\r\n    )\r\n\r\n    return store\r\n}"]},"metadata":{},"sourceType":"module"}