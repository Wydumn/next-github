{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { Router } from 'next/router';\nimport 'antd/dist/antd.css';\nimport Layout from '../components/Layout.jsx';\nimport withRedux from '../lib/with-redux';\nimport PageLoading from '../components/PageLoading.jsx'; // App中封装了许多App的核心代码\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      context: 'value'\n    });\n\n    _defineProperty(this, \"startLoading\", () => {\n      this.setState({\n        loading: true\n      });\n    });\n\n    _defineProperty(this, \"stopLoading\", () => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    Router.events.on('routerChangeStart', this.startLoading);\n    Router.events.on('routerChangeComplete', this.stopLoading);\n    Router.events.on('routerChangeError', this.stopLoading);\n  }\n\n  componentWillUnmount() {\n    Router.events.off('routerChangeStart', this.startLoading);\n    Router.events.on('routerChangeComplete', this.stopLoading);\n    Router.events.on('routerChangeError', this.stopLoading);\n  }\n\n  static async getInitialProps(ctx) {\n    const {\n      Component\n    } = ctx;\n    console.log('app初始化');\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    } // \"MyApp.getInitialProps()\" should resolve to an object.\n\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props;\n    return __jsx(Provider, {\n      store: reduxStore\n    }, __jsx(PageLoading, null), __jsx(Layout, null, __jsx(Component, pageProps)));\n  }\n\n}\n\nexport default withRedux(MyApp);","map":{"version":3,"sources":["D:/Project/interview/blog/pages/_app.js"],"names":["App","React","Provider","Router","Layout","withRedux","PageLoading","MyApp","context","setState","loading","componentDidMount","events","on","startLoading","stopLoading","componentWillUnmount","off","getInitialProps","ctx","Component","console","log","pageProps","render","reduxStore","props"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAO,oBAAP;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB,C,CAEA;;AACA,MAAMC,KAAN,SAAoBP,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCAEZ;AACJQ,MAAAA,OAAO,EAAE;AADL,KAFY;;AAAA,0CAML,MAAM;AACjB,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KAVmB;;AAAA,yCAYN,MAAM;AAChB,WAAKD,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KAhBmB;AAAA;;AAkBpBC,EAAAA,iBAAiB,GAAG;AAChBR,IAAAA,MAAM,CAACS,MAAP,CAAcC,EAAd,CAAiB,mBAAjB,EAAsC,KAAKC,YAA3C;AACAX,IAAAA,MAAM,CAACS,MAAP,CAAcC,EAAd,CAAiB,sBAAjB,EAAyC,KAAKE,WAA9C;AACAZ,IAAAA,MAAM,CAACS,MAAP,CAAcC,EAAd,CAAiB,mBAAjB,EAAsC,KAAKE,WAA3C;AACH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnBb,IAAAA,MAAM,CAACS,MAAP,CAAcK,GAAd,CAAkB,mBAAlB,EAAuC,KAAKH,YAA5C;AACAX,IAAAA,MAAM,CAACS,MAAP,CAAcC,EAAd,CAAiB,sBAAjB,EAAyC,KAAKE,WAA9C;AACAZ,IAAAA,MAAM,CAACS,MAAP,CAAcC,EAAd,CAAiB,mBAAjB,EAAsC,KAAKE,WAA3C;AACH;;AAED,eAAaG,eAAb,CAA6BC,GAA7B,EAAkC;AAC9B,UAAM;AAAEC,MAAAA;AAAF,QAAgBD,GAAtB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAIH,SAAS,CAACF,eAAd,EAA+B;AAC3BK,MAAAA,SAAS,GAAG,MAAMH,SAAS,CAACF,eAAV,CAA0BC,GAA1B,CAAlB;AACH,KAN6B,CAQ9B;;;AACA,WAAO;AAACI,MAAAA;AAAD,KAAP;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEJ,MAAAA,SAAF;AAAaG,MAAAA,SAAb;AAAwBE,MAAAA;AAAxB,QAAuC,KAAKC,KAAlD;AAEA,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED;AAAjB,OACI,MAAC,WAAD,OADJ,EAEI,MAAC,MAAD,QACI,MAAC,SAAD,EAAeF,SAAf,CADJ,CAFJ,CADJ;AAQH;;AArDmB;;AAwDxB,eAAelB,SAAS,CAACE,KAAD,CAAxB","sourcesContent":["import App from 'next/app'\r\nimport React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { Router } from 'next/router'\r\nimport 'antd/dist/antd.css'\r\n\r\nimport Layout from '../components/Layout.jsx'\r\n\r\nimport withRedux from '../lib/with-redux'\r\nimport PageLoading from '../components/PageLoading.jsx'\r\n\r\n// App中封装了许多App的核心代码\r\nclass MyApp extends App {\r\n\r\n    state = {\r\n        context: 'value'\r\n    }\r\n\r\n    startLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    stopLoading = () => {\r\n        this.setState({\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        Router.events.on('routerChangeStart', this.startLoading)\r\n        Router.events.on('routerChangeComplete', this.stopLoading)\r\n        Router.events.on('routerChangeError', this.stopLoading)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        Router.events.off('routerChangeStart', this.startLoading)\r\n        Router.events.on('routerChangeComplete', this.stopLoading)\r\n        Router.events.on('routerChangeError', this.stopLoading)\r\n    }\r\n\r\n    static async getInitialProps(ctx) {\r\n        const { Component } = ctx\r\n        console.log('app初始化')\r\n        let pageProps = {}\r\n        if (Component.getInitialProps) {\r\n            pageProps = await Component.getInitialProps(ctx)\r\n        }\r\n\r\n        // \"MyApp.getInitialProps()\" should resolve to an object.\r\n        return {pageProps}\r\n    }\r\n\r\n    render() {\r\n        const { Component, pageProps, reduxStore } = this.props\r\n\r\n        return (\r\n            <Provider store={reduxStore}>\r\n                <PageLoading />\r\n                <Layout>\r\n                    <Component {...pageProps} />\r\n                </Layout>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRedux(MyApp)"]},"metadata":{},"sourceType":"module"}