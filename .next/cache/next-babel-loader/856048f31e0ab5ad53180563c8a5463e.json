{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\n\nvar api = require('../lib/api');\n\nfunction Index(_ref) {\n  var userRepos = _ref.userRepos,\n      userStarredRepos = _ref.userStarredRepos;\n  console.log(userRepos, userStarredRepos);\n  return __jsx(\"span\", null, \"Index\");\n}\n\nIndex.getInitialProps = function _callee(_ref2) {\n  var ctx, reduxStore, userRepos, userStarredRepos;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          ctx = _ref2.ctx, reduxStore = _ref2.reduxStore;\n\n          // const result = await axios\n          //     .get('/github/search/repositories?q=react')\n          //     .then(res => console.log(res))\n          if (!user || !user.id) {} // 获取仓库\n\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(api.request({\n            url: '/user/repos'\n          }, ctx.req, ctx.res));\n\n        case 4:\n          userRepos = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(api.request({\n            url: '/user/starred'\n          }, ctx.req, ctx.res));\n\n        case 7:\n          userStarredRepos = _context.sent;\n          return _context.abrupt(\"return\", {\n            userRepos: userRepos.data,\n            userStarredRepos: userStarredRepos.data\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/Project/interview/blog/pages/index.js"],"names":["axios","api","require","Index","userRepos","userStarredRepos","console","log","getInitialProps","ctx","reduxStore","user","id","request","url","req","res","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AAEA,SAASC,KAAT,OAAiD;AAAA,MAA/BC,SAA+B,QAA/BA,SAA+B;AAAA,MAApBC,gBAAoB,QAApBA,gBAAoB;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAAuBC,gBAAvB;AACA,SAAO,4BAAP;AACH;;AAEDF,KAAK,CAACK,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,SAASA,GAAT,EAAcC,UAAd,SAAcA,UAAd;;AACpB;AACA;AACA;AAEA,cAAI,CAACC,IAAD,IAAS,CAACA,IAAI,CAACC,EAAnB,EAAuB,CAEtB,CAPmB,CAUpB;;;AAVoB;AAAA,2CAWIX,GAAG,CAACY,OAAJ,CAAY;AAChCC,YAAAA,GAAG,EAAE;AAD2B,WAAZ,EAErBL,GAAG,CAACM,GAFiB,EAEZN,GAAG,CAACO,GAFQ,CAXJ;;AAAA;AAWdZ,UAAAA,SAXc;AAAA;AAAA,2CAeWH,GAAG,CAACY,OAAJ,CAAY;AACvCC,YAAAA,GAAG,EAAE;AADkC,WAAZ,EAE5BL,GAAG,CAACM,GAFwB,EAEnBN,GAAG,CAACO,GAFe,CAfX;;AAAA;AAedX,UAAAA,gBAfc;AAAA,2CAmBb;AACHD,YAAAA,SAAS,EAAEA,SAAS,CAACa,IADlB;AAEHZ,YAAAA,gBAAgB,EAAEA,gBAAgB,CAACY;AAFhC,WAnBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAyBA,eAAed,KAAf","sourcesContent":["import axios from \"axios\"\r\n\r\nconst api = require('../lib/api')\r\n\r\nfunction Index ({ userRepos, userStarredRepos }) {\r\n    console.log(userRepos, userStarredRepos)\r\n    return <span>Index</span>\r\n}\r\n\r\nIndex.getInitialProps = async ({ ctx, reduxStore }) => {\r\n    // const result = await axios\r\n    //     .get('/github/search/repositories?q=react')\r\n    //     .then(res => console.log(res))\r\n\r\n    if (!user || !user.id) {\r\n        \r\n    }\r\n\r\n\r\n    // 获取仓库\r\n    const userRepos = await api.request({\r\n        url: '/user/repos'\r\n    }, ctx.req, ctx.res)\r\n\r\n    const userStarredRepos = await api.request({\r\n        url: '/user/starred'\r\n    }, ctx.req, ctx.res)\r\n\r\n    return {\r\n        userRepos: userRepos.data,\r\n        userStarredRepos: userStarredRepos.data\r\n    }\r\n}\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}