{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime-corejs2/regenerator\");\n\nvar axios = require('axios');\n\nvar github_base_url = 'https://api.github.com';\n\nfunction requestGithub(method, url, data, headers) {\n  return _regeneratorRuntime.async(function requestGithub$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios({\n            method: method,\n            url: \"\".concat(github_base_url).concat(url),\n            data: data,\n            headers: headers\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\n\nvar isServer = false;\n\nfunction request(_ref, req, res) {\n  var _ref$method, method, url, _ref$data, data, session, githubAuth, headers;\n\n  return _regeneratorRuntime.async(function request$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _ref$method = _ref.method, method = _ref$method === void 0 ? 'GET' : _ref$method, url = _ref.url, _ref$data = _ref.data, data = _ref$data === void 0 ? {} : _ref$data;\n\n          if (url) {\n            _context2.next = 3;\n            break;\n          }\n\n          throw Error('url must provide');\n\n        case 3:\n          if (!isServer) {\n            _context2.next = 13;\n            break;\n          }\n\n          session = req.session;\n          githubAuth = session.githubAuth || {};\n          headers = {};\n\n          if (githubAuth.access_token) {\n            headers['Authorization'] = \"\".concat(githubAuth.token_type, \" \").concat(githubAuth.access_token);\n          }\n\n          _context2.next = 10;\n          return _regeneratorRuntime.awrap(requestGithub(method, url, data, headers));\n\n        case 10:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 13:\n          _context2.next = 15;\n          return _regeneratorRuntime.awrap(axios({\n            method: method,\n            url: \"/github\".concat(url),\n            data: data\n          }));\n\n        case 15:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n}\n\nmodule.exports = {\n  request: request,\n  requestGithub: requestGithub\n};","map":null,"metadata":{},"sourceType":"script"}