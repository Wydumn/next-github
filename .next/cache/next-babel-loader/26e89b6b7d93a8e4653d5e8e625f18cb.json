{"ast":null,"code":"import _Button from \"antd/lib/button\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport getConfig from 'next/config';\nimport { connect } from 'react-redux';\n\nconst api = require('../lib/api');\n\nconst {\n  publicRuntimeConfig\n} = getConfig();\n\nfunction Index({\n  userRepos,\n  userStarredRepos\n}) {\n  console.log(userRepos, userStarredRepos);\n\n  if (!isLogin) {\n    return __jsx(\"div\", {\n      className: \"jsx-2321875535\" + \" \" + 'root'\n    }, __jsx(\"p\", {\n      className: \"jsx-2321875535\"\n    }, \"\\u60A8\\u8FD8\\u6CA1\\u6709\\u767B\\u5F55\"), __jsx(_Button, {\n      type: \"primary\",\n      href: publicRuntimeConfig.OAUTH_URL\n    }, \"\\u70B9\\u51FB\\u767B\\u5F55\"), __jsx(_JSXStyle, {\n      id: \"2321875535\"\n    }, \".root.jsx-2321875535{height:400px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxQcm9qZWN0XFxpbnRlcnZpZXdcXGJsb2dcXHBhZ2VzXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQjRCLEFBR3NDLGFBQ0EsMEVBQ1MsOEVBQ0MsbUdBQ0osNkZBQ3ZCIiwiZmlsZSI6IkQ6XFxQcm9qZWN0XFxpbnRlcnZpZXdcXGJsb2dcXHBhZ2VzXFxpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJ2FudGQnXHJcbmltcG9ydCBnZXRDb25maWcgZnJvbSAnbmV4dC9jb25maWcnXHJcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCdcclxuXHJcbmNvbnN0IGFwaSA9IHJlcXVpcmUoJy4uL2xpYi9hcGknKVxyXG5cclxuY29uc3QgeyBwdWJsaWNSdW50aW1lQ29uZmlnIH0gPSBnZXRDb25maWcoKVxyXG5cclxuZnVuY3Rpb24gSW5kZXggKHsgdXNlclJlcG9zLCB1c2VyU3RhcnJlZFJlcG9zLCB9KSB7XHJcbiAgICBjb25zb2xlLmxvZyh1c2VyUmVwb3MsIHVzZXJTdGFycmVkUmVwb3MpXHJcblxyXG4gICAgaWYgKCFpc0xvZ2luKSB7XHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3Jvb3QnPlxyXG4gICAgICAgICAgICAgICAgPHA+5oKo6L+Y5rKh5pyJ55m75b2VPC9wPlxyXG4gICAgICAgICAgICAgICAgPEJ1dHRvbiB0eXBlPVwicHJpbWFyeVwiIGhyZWY9e3B1YmxpY1J1bnRpbWVDb25maWcuT0FVVEhfVVJMfT5cclxuICAgICAgICAgICAgICAgICAgICDngrnlh7vnmbvlvZVcclxuICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgICAgICAgICAgIC5yb290IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA0MDBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgfSAgICBcclxuICAgICAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgKVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiA8c3Bhbj5JbmRleDwvc3Bhbj5cclxufVxyXG5cclxuSW5kZXguZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgKHsgY3R4LCByZWR1eFN0b3JlIH0pID0+IHtcclxuICAgIC8vIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGF4aW9zXHJcbiAgICAvLyAgICAgLmdldCgnL2dpdGh1Yi9zZWFyY2gvcmVwb3NpdG9yaWVzP3E9cmVhY3QnKVxyXG4gICAgLy8gICAgIC50aGVuKHJlcyA9PiBjb25zb2xlLmxvZyhyZXMpKVxyXG5cclxuICAgIGNvbnN0IHVzZXIgPSByZWR1eFN0b3JlLmdldFN0YXRlKCkudXNlclxyXG4gICAgaWYgKCF1c2VyIHx8ICF1c2VyLmlkKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgaXNMb2dpbjogZmFsc2VcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8vIOiOt+WPluS7k+W6k1xyXG4gICAgY29uc3QgdXNlclJlcG9zID0gYXdhaXQgYXBpLnJlcXVlc3Qoe1xyXG4gICAgICAgIHVybDogJy91c2VyL3JlcG9zJ1xyXG4gICAgfSwgY3R4LnJlcSwgY3R4LnJlcylcclxuXHJcbiAgICAvLyDojrflj5borqTor4HnlKjmiLdTdGFy55qE5LuT5bqTXHJcbiAgICBjb25zdCB1c2VyU3RhcnJlZFJlcG9zID0gYXdhaXQgYXBpLnJlcXVlc3Qoe1xyXG4gICAgICAgIHVybDogJy91c2VyL3N0YXJyZWQnXHJcbiAgICB9LCBjdHgucmVxLCBjdHgucmVzKVxyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaXNMb2dpbjogdHJ1ZSxcclxuICAgICAgICB1c2VyUmVwb3M6IHVzZXJSZXBvcy5kYXRhLFxyXG4gICAgICAgIHVzZXJTdGFycmVkUmVwb3M6IHVzZXJTdGFycmVkUmVwb3MuZGF0YVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KGZ1bmN0aW9uIG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICB1c2VyOiBzdGF0ZS51c2VyLFxyXG4gICAgfVxyXG59KShJbmRleCkiXX0= */\\n/*@ sourceURL=D:\\\\\\\\Project\\\\\\\\interview\\\\\\\\blog\\\\\\\\pages\\\\\\\\index.js */\"));\n  }\n\n  return __jsx(\"span\", null, \"Index\");\n}\n\nIndex.getInitialProps = async ({\n  ctx,\n  reduxStore\n}) => {\n  // const result = await axios\n  //     .get('/github/search/repositories?q=react')\n  //     .then(res => console.log(res))\n  const user = reduxStore.getState().user;\n\n  if (!user || !user.id) {\n    return {\n      isLogin: false\n    };\n  } // 获取仓库\n\n\n  const userRepos = await api.request({\n    url: '/user/repos'\n  }, ctx.req, ctx.res); // 获取认证用户Star的仓库\n\n  const userStarredRepos = await api.request({\n    url: '/user/starred'\n  }, ctx.req, ctx.res);\n  return {\n    isLogin: true,\n    userRepos: userRepos.data,\n    userStarredRepos: userStarredRepos.data\n  };\n};\n\nexport default connect(function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n})(Index);","map":{"version":3,"sources":["D:/Project/interview/blog/pages/index.js"],"names":["getConfig","connect","api","require","publicRuntimeConfig","Index","userRepos","userStarredRepos","console","log","isLogin","OAUTH_URL","getInitialProps","ctx","reduxStore","user","getState","id","request","url","req","res","data","mapStateToProps","state"],"mappings":";;;;AACA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAA0BJ,SAAS,EAAzC;;AAEA,SAASK,KAAT,CAAgB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAhB,EAAkD;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAAuBC,gBAAvB;;AAEA,MAAI,CAACG,OAAL,EAAc;AACV,WACI;AAAA,0CAAe;AAAf,OACI;AAAA;AAAA,8CADJ,EAEI;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,IAAI,EAAEN,mBAAmB,CAACO;AAAjD,kCAFJ;AAAA;AAAA,62GADJ;AAiBH;;AAED,SAAO,4BAAP;AACH;;AAEDN,KAAK,CAACO,eAAN,GAAwB,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAA+B;AACnD;AACA;AACA;AAEA,QAAMC,IAAI,GAAGD,UAAU,CAACE,QAAX,GAAsBD,IAAnC;;AACA,MAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACE,EAAnB,EAAuB;AACnB,WAAO;AACHP,MAAAA,OAAO,EAAE;AADN,KAAP;AAGH,GAVkD,CAanD;;;AACA,QAAMJ,SAAS,GAAG,MAAMJ,GAAG,CAACgB,OAAJ,CAAY;AAChCC,IAAAA,GAAG,EAAE;AAD2B,GAAZ,EAErBN,GAAG,CAACO,GAFiB,EAEZP,GAAG,CAACQ,GAFQ,CAAxB,CAdmD,CAkBnD;;AACA,QAAMd,gBAAgB,GAAG,MAAML,GAAG,CAACgB,OAAJ,CAAY;AACvCC,IAAAA,GAAG,EAAE;AADkC,GAAZ,EAE5BN,GAAG,CAACO,GAFwB,EAEnBP,GAAG,CAACQ,GAFe,CAA/B;AAIA,SAAO;AACHX,IAAAA,OAAO,EAAE,IADN;AAEHJ,IAAAA,SAAS,EAAEA,SAAS,CAACgB,IAFlB;AAGHf,IAAAA,gBAAgB,EAAEA,gBAAgB,CAACe;AAHhC,GAAP;AAKH,CA5BD;;AA8BA,eAAerB,OAAO,CAAC,SAASsB,eAAT,CAAyBC,KAAzB,EAAgC;AACnD,SAAO;AACHT,IAAAA,IAAI,EAAES,KAAK,CAACT;AADT,GAAP;AAGH,CAJqB,CAAP,CAIZV,KAJY,CAAf","sourcesContent":["import { Button } from 'antd'\r\nimport getConfig from 'next/config'\r\nimport { connect } from 'react-redux'\r\n\r\nconst api = require('../lib/api')\r\n\r\nconst { publicRuntimeConfig } = getConfig()\r\n\r\nfunction Index ({ userRepos, userStarredRepos, }) {\r\n    console.log(userRepos, userStarredRepos)\r\n\r\n    if (!isLogin) {\r\n        return (\r\n            <div className='root'>\r\n                <p>您还没有登录</p>\r\n                <Button type=\"primary\" href={publicRuntimeConfig.OAUTH_URL}>\r\n                    点击登录\r\n                </Button>\r\n                <style jsx>{`\r\n                    .root {\r\n                        height: 400px;\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                    }    \r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <span>Index</span>\r\n}\r\n\r\nIndex.getInitialProps = async ({ ctx, reduxStore }) => {\r\n    // const result = await axios\r\n    //     .get('/github/search/repositories?q=react')\r\n    //     .then(res => console.log(res))\r\n\r\n    const user = reduxStore.getState().user\r\n    if (!user || !user.id) {\r\n        return {\r\n            isLogin: false\r\n        }\r\n    }\r\n\r\n\r\n    // 获取仓库\r\n    const userRepos = await api.request({\r\n        url: '/user/repos'\r\n    }, ctx.req, ctx.res)\r\n\r\n    // 获取认证用户Star的仓库\r\n    const userStarredRepos = await api.request({\r\n        url: '/user/starred'\r\n    }, ctx.req, ctx.res)\r\n\r\n    return {\r\n        isLogin: true,\r\n        userRepos: userRepos.data,\r\n        userStarredRepos: userStarredRepos.data\r\n    }\r\n}\r\n\r\nexport default connect(function mapStateToProps(state) {\r\n    return {\r\n        user: state.user,\r\n    }\r\n})(Index)"]},"metadata":{},"sourceType":"module"}