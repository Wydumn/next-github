{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Row from \"antd/lib/row\";\nimport _Pagination from \"antd/lib/pagination\";\nimport _Col from \"antd/lib/col\";\nimport _List from \"antd/lib/list\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { memo, isValidElement } from 'react';\nimport { withRouter } from 'next/router';\nimport Link from 'next/link';\nimport Repo from '../components/Repo';\n\nvar api = require('../lib/api');\n\nvar LANGUAGES = ['JavaScript', 'TypeScript', 'HTML', 'CSS', 'Java', 'Rust'];\nvar SORT_TYPES = [{\n  name: 'Best Match'\n}, {\n  name: 'Most Stars',\n  value: 'stars',\n  order: 'desc'\n}, {\n  name: 'Fewest Stars',\n  value: 'stars',\n  order: 'asc'\n}, {\n  name: 'Most Forks',\n  value: 'forks',\n  order: 'desc'\n}, {\n  name: 'Fewest Forks',\n  value: 'forks',\n  order: 'asc'\n}];\nvar selectedItemStyle = {\n  borderLeft: '2px solid #e36209',\n  fontWeight: 100\n};\n\nfunction noop() {}\n\nvar per_page = 20;\nvar FilterLink = memo(function (_ref) {\n  var name = _ref.name,\n      query = _ref.query,\n      lang = _ref.lang,\n      sort = _ref.sort,\n      order = _ref.order,\n      page = _ref.page;\n  var queryString = \"?query=\".concat(query);\n  if (lang) queryString += \"&lang=\".concat(lang);\n  if (sort) queryString += \"&sort=\".concat(sort, \"&order=\").concat(order || 'desc');\n  if (page) queryString += \"&page=\".concat(page);\n  queryString += \"&per_page=\".concat(per_page);\n  return __jsx(Link, {\n    href: \"/search\".concat(queryString)\n  }, isValidElement(name) ? name : __jsx(\"a\", null, name));\n});\n\nfunction Search(_ref2) {\n  var router = _ref2.router,\n      repos = _ref2.repos;\n\n  var querys = _extends({}, router.query);\n\n  var _router$query = router.query,\n      lang = _router$query.lang,\n      sort = _router$query.sort,\n      order = _router$query.order,\n      page = _router$query.page;\n  return __jsx(\"div\", {\n    className: \"jsx-4261653446\" + \" \" + \"root\"\n  }, __jsx(_Row, {\n    gutter: 20\n  }, __jsx(_Col, {\n    span: 6\n  }, __jsx(_List, {\n    bordered: true,\n    header: __jsx(\"span\", {\n      className: \"jsx-4261653446\" + \" \" + \"list-header\"\n    }, \"\\u8BED\\u8A00\"),\n    style: {\n      marginBottom: 20\n    },\n    dataSource: LANGUAGES,\n    renderItem: function renderItem(item) {\n      var selected = lang === item;\n      return __jsx(_List.Item, {\n        sytle: selected ? selectedItemStyle : null\n      }, selected ? __jsx(\"span\", {\n        className: \"jsx-4261653446\"\n      }, item) : __jsx(FilterLink, _extends({}, querys, {\n        lang: item,\n        name: item\n      })));\n    }\n  }), __jsx(_List, {\n    bordered: true,\n    header: __jsx(\"span\", {\n      className: \"jsx-4261653446\" + \" \" + \"list-header\"\n    }, \"\\u6392\\u5E8F\"),\n    dataSource: SORT_TYPES,\n    renderItem: function renderItem(item) {\n      var selected = false;\n\n      if (item.name === 'Best Match' && !sort) {\n        selected = true;\n      } else if (item.value === sort && item.order === order) {\n        selected = true;\n      }\n\n      return __jsx(_List.Item, {\n        style: selected ? selectedItemStyle : null\n      }, selected ? __jsx(\"span\", {\n        className: \"jsx-4261653446\"\n      }, item.name) : __jsx(FilterLink, _extends({}, querys, {\n        sort: item.value,\n        order: item.order,\n        name: item.name\n      })));\n    }\n  })), __jsx(_Col, {\n    span: 18\n  }, __jsx(\"h3\", {\n    className: \"jsx-4261653446\" + \" \" + \"repos-title\"\n  }, repos.total_count, \"\\u4E2ARepositories\"), repos.items.map(function (repo) {\n    return __jsx(Repo, {\n      repo: repo,\n      key: repo.id\n    });\n  }), __jsx(\"div\", {\n    className: \"jsx-4261653446\" + \" \" + \"pagination\"\n  }, __jsx(_Pagination, {\n    pageSize: per_page,\n    current: Number(page) || 1,\n    total: 1000,\n    onChange: noop,\n    itemRender: function itemRender(page, type, ol) {\n      var p = type === 'page' ? page : type === 'prev' ? page - 1 : page + 1;\n      var name = type === 'page' ? page : ol;\n      return __jsx(FilterLink, _extends({}, querys, {\n        page: p,\n        name: name\n      }));\n    }\n  })))), __jsx(_JSXStyle, {\n    id: \"4261653446\"\n  }, \".root.jsx-4261653446{padding:20px 0;}.list-header.jsx-4261653446{font-weight:800;font-size:16px;}.repos-title.jsx-4261653446{border-bottom:1px solid #eee;font-size:24px;line-height:50px;}.pagination.jsx-4261653446{padding:20px;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\Project\\\\\\\\interview\\\\\\\\blog\\\\\\\\pages\\\\\\\\search.js */\"));\n}\n\nSearch.getInitialProps = function _callee(_ref3) {\n  var ctx, _ctx$query, query, sort, lang, order, page, queryString, result;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          ctx = _ref3.ctx;\n          _ctx$query = ctx.query, query = _ctx$query.query, sort = _ctx$query.sort, lang = _ctx$query.lang, order = _ctx$query.order, page = _ctx$query.page;\n\n          if (query) {\n            _context.next = 4;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            repos: {\n              total_count: 0\n            }\n          });\n\n        case 4:\n          queryString = \"?q=\".concat(query);\n          if (lang) queryString += \"+language:\".concat(lang);\n          if (sort) queryString += \"&sort=\".concat(sort, \"&order=\").concat(order || 'desc');\n          if (page) queryString += \"&page=\".concat(page);\n          queryString += \"&per_page=\".concat(per_page);\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(api.request({\n            url: \"/search/repositories\".concat(queryString)\n          }, ctx.req, ctx.res));\n\n        case 11:\n          result = _context.sent;\n          return _context.abrupt(\"return\", {\n            repos: result.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(Search);","map":{"version":3,"sources":["D:/Project/interview/blog/pages/search.js"],"names":["memo","isValidElement","withRouter","Link","Repo","api","require","LANGUAGES","SORT_TYPES","name","value","order","selectedItemStyle","borderLeft","fontWeight","noop","per_page","FilterLink","query","lang","sort","page","queryString","Search","router","repos","querys","marginBottom","item","selected","total_count","items","map","repo","id","Number","type","ol","p","getInitialProps","ctx","request","url","req","res","result","data"],"mappings":"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","sourcesContent":["import { memo, isValidElement } from 'react'\r\nimport { withRouter} from 'next/router'\r\nimport { Row, Col, List, Pagination} from 'antd'\r\nimport Link from 'next/link'\r\n\r\nimport Repo from '../components/Repo'\r\n\r\nconst api = require('../lib/api')\r\n\r\nconst LANGUAGES = ['JavaScript', 'TypeScript', 'HTML', 'CSS', 'Java', 'Rust']\r\nconst SORT_TYPES = [\r\n    {\r\n        name: 'Best Match'\r\n    },\r\n    {\r\n        name: 'Most Stars',\r\n        value: 'stars',\r\n        order: 'desc'\r\n    },\r\n    {\r\n        name: 'Fewest Stars',\r\n        value: 'stars',\r\n        order: 'asc'\r\n    },\r\n    {\r\n        name: 'Most Forks',\r\n        value: 'forks',\r\n        order: 'desc'\r\n    },\r\n    {\r\n        name: 'Fewest Forks',\r\n        value: 'forks',\r\n        order: 'asc'\r\n    }\r\n]\r\n\r\nconst selectedItemStyle = {\r\n    borderLeft: '2px solid #e36209',\r\n    fontWeight: 100\r\n}\r\n\r\nfunction noop() {}\r\n\r\nconst per_page = 20\r\n\r\nconst FilterLink = memo(({ name, query, lang, sort, order, page }) => {  \r\n    let queryString = `?query=${query}`\r\n    if (lang) queryString += `&lang=${lang}`\r\n    if (sort) queryString += `&sort=${sort}&order=${order || 'desc'}`\r\n    if (page) queryString += `&page=${page}`\r\n\r\n    queryString += `&per_page=${per_page}`\r\n\r\n    return (\r\n        <Link href={`/search${queryString}`}>\r\n            {isValidElement(name) ? name : <a>{name}</a>}\r\n\r\n        </Link>\r\n    )\r\n})\r\n\r\nfunction Search({ router, repos }) {\r\n    const { ...querys } = router.query\r\n    const { lang, sort, order, page } = router.query\r\n\r\n    return (\r\n        <div className=\"root\">\r\n            <Row gutter={20}>\r\n                <Col span={6}>\r\n                    <List \r\n                        bordered\r\n                        header={<span className=\"list-header\">语言</span>}\r\n                        style={{ marginBottom: 20 }}\r\n                        dataSource={LANGUAGES}\r\n                        renderItem={item => {\r\n                            const selected = lang === item\r\n                            \r\n                            return (\r\n                                <List.Item sytle={selected ? selectedItemStyle : null}>\r\n                                    {selected ? <span>{item}</span> : <FilterLink {...querys}       lang={item} name={item} />\r\n                                    }\r\n                                </List.Item>\r\n                            )\r\n                        }}\r\n                    />\r\n                    <List \r\n                        bordered\r\n                        header={<span className=\"list-header\">排序</span>}\r\n                        dataSource={SORT_TYPES}\r\n                        renderItem={item => {\r\n                            let selected = false\r\n                            if (item.name === 'Best Match' && !sort) {\r\n                                selected = true\r\n                            } else if (item.value === sort && item.order === order) {\r\n                                selected = true\r\n                            }\r\n                            return (\r\n                                <List.Item style={selected ? selectedItemStyle : null}>\r\n                                    {\r\n                                        selected ?  <span>{item.name}</span> : <FilterLink \r\n                                            {...querys}\r\n                                            sort={item.value}\r\n                                            order={item.order}\r\n                                            name={item.name}\r\n                                        />\r\n                                    }\r\n                                </List.Item>\r\n                            )\r\n                        }}\r\n                    />\r\n                </Col>\r\n                <Col span={18}>\r\n                    <h3 className=\"repos-title\">{repos.total_count}个Repositories</h3>\r\n                    {\r\n                        repos.items.map(repo => (<Repo repo={repo} key={repo.id} />))\r\n                    }\r\n                    <div className=\"pagination\">\r\n                        <Pagination\r\n                            pageSize={per_page}\r\n                            current={Number(page) || 1}\r\n                            total={1000}\r\n                            onChange={noop}\r\n                            itemRender={(page, type, ol) => {\r\n                                const p = type === 'page' ? page : type === 'prev' ? page - 1 : page + 1\r\n                                const name = type === 'page' ? page : ol\r\n                                return <FilterLink {...querys} page={p} name={name} />\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <style jsx>{`\r\n                .root {\r\n                    padding: 20px 0;\r\n                }\r\n                .list-header {\r\n                    font-weight: 800;\r\n                    font-size: 16px;\r\n                }\r\n                .repos-title {\r\n                    border-bottom: 1px solid #eee;\r\n                    font-size: 24px;\r\n                    line-height: 50px;\r\n                }\r\n                .pagination {\r\n                    padding: 20px;\r\n                    text-align: center;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    )\r\n}\r\n\r\nSearch.getInitialProps = async ({ctx}) => {\r\n    const { query, sort, lang, order, page } = ctx.query\r\n\r\n    if (!query) {\r\n        return {\r\n            repos: {\r\n                total_count: 0\r\n            }\r\n        }\r\n    } \r\n\r\n    let queryString = `?q=${query}`\r\n    if (lang) queryString += `+language:${lang}`\r\n    if (sort) queryString += `&sort=${sort}&order=${order || 'desc'}`\r\n    if (page) queryString += `&page=${page}`\r\n\r\n    queryString += `&per_page=${per_page}`\r\n\r\n    const result = await api.request({\r\n        url: `/search/repositories${queryString}`\r\n    }, ctx.req, ctx.res)\r\n\r\n    return {\r\n        repos: result.data\r\n    }\r\n}\r\n\r\nexport default withRouter(Search)"]},"metadata":{},"sourceType":"module"}