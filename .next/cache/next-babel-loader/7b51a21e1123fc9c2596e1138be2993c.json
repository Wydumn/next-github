{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\n\nvar api = require('../lib/api');\n\nfunction Index(_ref) {\n  var userRepos = _ref.userRepos,\n      userStarredRepos = _ref.userStarredRepos,\n      isLog = _ref.isLog;\n  console.log(userRepos, userStarredRepos);\n  return __jsx(\"span\", null, \"Index\");\n}\n\nIndex.getInitialProps = function _callee(_ref2) {\n  var ctx, reduxStore, userRepos, userStarredRepos;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          ctx = _ref2.ctx, reduxStore = _ref2.reduxStore;\n\n          if (!(!user || !user.id)) {\n            _context.next = 3;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            isLogin: false\n          });\n\n        case 3:\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(api.request({\n            url: '/user/repos'\n          }, ctx.req, ctx.res));\n\n        case 5:\n          userRepos = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(api.request({\n            url: '/user/starred'\n          }, ctx.req, ctx.res));\n\n        case 8:\n          userStarredRepos = _context.sent;\n          return _context.abrupt(\"return\", {\n            isLogin: true,\n            userRepos: userRepos.data,\n            userStarredRepos: userStarredRepos.data\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/Project/interview/blog/pages/index.js"],"names":["axios","api","require","Index","userRepos","userStarredRepos","isLog","console","log","getInitialProps","ctx","reduxStore","user","id","isLogin","request","url","req","res","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AAEA,SAASC,KAAT,OAAwD;AAAA,MAAtCC,SAAsC,QAAtCA,SAAsC;AAAA,MAA3BC,gBAA2B,QAA3BA,gBAA2B;AAAA,MAATC,KAAS,QAATA,KAAS;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EAAuBC,gBAAvB;AACA,SAAO,4BAAP;AACH;;AAEDF,KAAK,CAACM,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,SAASA,GAAT,EAAcC,UAAd,SAAcA,UAAd;;AAAA,gBAKhB,CAACC,IAAD,IAAS,CAACA,IAAI,CAACC,EALC;AAAA;AAAA;AAAA;;AAAA,2CAMT;AACHC,YAAAA,OAAO,EAAE;AADN,WANS;;AAAA;AAAA;AAAA,2CAaIb,GAAG,CAACc,OAAJ,CAAY;AAChCC,YAAAA,GAAG,EAAE;AAD2B,WAAZ,EAErBN,GAAG,CAACO,GAFiB,EAEZP,GAAG,CAACQ,GAFQ,CAbJ;;AAAA;AAadd,UAAAA,SAbc;AAAA;AAAA,2CAiBWH,GAAG,CAACc,OAAJ,CAAY;AACvCC,YAAAA,GAAG,EAAE;AADkC,WAAZ,EAE5BN,GAAG,CAACO,GAFwB,EAEnBP,GAAG,CAACQ,GAFe,CAjBX;;AAAA;AAiBdb,UAAAA,gBAjBc;AAAA,2CAqBb;AACHS,YAAAA,OAAO,EAAE,IADN;AAEHV,YAAAA,SAAS,EAAEA,SAAS,CAACe,IAFlB;AAGHd,YAAAA,gBAAgB,EAAEA,gBAAgB,CAACc;AAHhC,WArBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AA4BA,eAAehB,KAAf","sourcesContent":["import axios from \"axios\"\r\n\r\nconst api = require('../lib/api')\r\n\r\nfunction Index ({ userRepos, userStarredRepos, isLog }) {\r\n    console.log(userRepos, userStarredRepos)\r\n    return <span>Index</span>\r\n}\r\n\r\nIndex.getInitialProps = async ({ ctx, reduxStore }) => {\r\n    // const result = await axios\r\n    //     .get('/github/search/repositories?q=react')\r\n    //     .then(res => console.log(res))\r\n\r\n    if (!user || !user.id) {\r\n        return {\r\n            isLogin: false\r\n        }\r\n    }\r\n\r\n\r\n    // 获取仓库\r\n    const userRepos = await api.request({\r\n        url: '/user/repos'\r\n    }, ctx.req, ctx.res)\r\n\r\n    const userStarredRepos = await api.request({\r\n        url: '/user/starred'\r\n    }, ctx.req, ctx.res)\r\n\r\n    return {\r\n        isLogin: true,\r\n        userRepos: userRepos.data,\r\n        userStarredRepos: userStarredRepos.data\r\n    }\r\n}\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}