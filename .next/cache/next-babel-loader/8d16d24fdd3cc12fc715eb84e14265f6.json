{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nvar userInitialState = {};\n\nfunction userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\nvar allReducers = combineReducers({\n  user: userReducer\n}); // 每次调用都生成一个新的store\n\nexport default function initializeStore(state) {\n  var store = createStore(allReducers, _Object$assign({}, {\n    user: userInitialState\n  }, state), composeWithDevTools(applyMiddleware(ReduxThunk)));\n  return store;\n}","map":{"version":3,"sources":["D:/Project/interview/blog/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","ReduxThunk","composeWithDevTools","userInitialState","userReducer","state","action","type","allReducers","user","initializeStore","store"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAGA,IAAMC,gBAAgB,GAAG,EAAzB;;AAEA,SAASC,WAAT,GAAwD;AAAA,MAAlCC,KAAkC,uEAA1BF,gBAA0B;AAAA,MAARG,MAAQ;;AACpD,UAAOA,MAAM,CAACC,IAAd;AACI;AACI,aAAOF,KAAP;AAFR;AAIH;;AAED,IAAMG,WAAW,GAAGT,eAAe,CAAC;AAChCU,EAAAA,IAAI,EAAEL;AAD0B,CAAD,CAAnC,C,CAIA;;AACA,eAAe,SAASM,eAAT,CAAyBL,KAAzB,EAAgC;AAC3C,MAAMM,KAAK,GAAGb,WAAW,CACrBU,WADqB,EAErB,eAAc,EAAd,EAAkB;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAlB,EAA6CE,KAA7C,CAFqB,EAGrBH,mBAAmB,CAACF,eAAe,CAACC,UAAD,CAAhB,CAHE,CAAzB;AAMA,SAAOU,KAAP;AACH","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\n\r\nconst userInitialState = {}\r\n\r\nfunction userReducer( state = userInitialState, action) {\r\n    switch(action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst allReducers = combineReducers({\r\n    user: userReducer\r\n})\r\n\r\n// 每次调用都生成一个新的store\r\nexport default function initializeStore(state) {\r\n    const store = createStore(\r\n        allReducers, \r\n        Object.assign({}, { user: userInitialState}, state),\r\n        composeWithDevTools(applyMiddleware(ReduxThunk))\r\n    )\r\n\r\n    return store\r\n}"]},"metadata":{},"sourceType":"module"}