{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Row from \"antd/lib/row\";\nimport _Pagination from \"antd/lib/pagination\";\nimport _Col from \"antd/lib/col\";\nimport _List from \"antd/lib/list\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { memo, isValidElement } from 'react';\nimport { withRouter } from 'next/router';\nimport Link from 'next/link';\nimport Repo from '../components/Repo';\n\nvar api = require('../lib/api');\n\nvar LANGUAGES = ['JavaScript', 'TypeScript', 'HTML', 'CSS', 'Java', 'Rust'];\nvar SORT_TYPES = [{\n  name: 'Best Match'\n}, {\n  name: 'Most Stars',\n  value: 'stars',\n  order: 'desc'\n}, {\n  name: 'Fewest Stars',\n  value: 'stars',\n  order: 'asc'\n}, {\n  name: 'Most Forks',\n  value: 'forks',\n  order: 'desc'\n}, {\n  name: 'Fewest Forks',\n  value: 'forks',\n  order: 'asc'\n}];\nvar selectedItemStyle = {\n  borderLeft: '2px solid #e36209',\n  fontWeight: 100\n};\n\nfunction noop() {}\n\nvar per_page = 20;\nvar FilterLink = memo(function (_ref) {\n  var name = _ref.name,\n      query = _ref.query,\n      lang = _ref.lang,\n      sort = _ref.sort,\n      order = _ref.order,\n      page = _ref.page;\n  var queryString = \"?query=\".concat(query);\n  if (lang) queryString += \"&lang=\".concat(lang);\n  if (sort) queryString += \"&sort=\".concat(sort, \"&order=\").concat(order || 'desc');\n  if (page) queryString += \"&page=\".concat(page);\n  queryString += \"&per_page=\".concat(per_page);\n  return __jsx(Link, {\n    href: \"/search\".concat(queryString)\n  }, isValidElement(name) ? name : __jsx(\"a\", null, name), __jsx(\"a\", null, name));\n});\n\nfunction Search(_ref2) {\n  var router = _ref2.router,\n      repos = _ref2.repos;\n\n  var querys = _extends({}, router.query);\n\n  var _router$query = router.query,\n      lang = _router$query.lang,\n      sort = _router$query.sort,\n      order = _router$query.order,\n      page = _router$query.page;\n  return __jsx(\"div\", {\n    className: \"jsx-4261653446\" + \" \" + \"root\"\n  }, __jsx(_Row, {\n    gutter: 20\n  }, __jsx(_Col, {\n    span: 6\n  }, __jsx(_List, {\n    bordered: true,\n    header: __jsx(\"span\", {\n      className: \"jsx-4261653446\" + \" \" + \"list-header\"\n    }, \"\\u8BED\\u8A00\"),\n    style: {\n      marginBottom: 20\n    },\n    dataSource: LANGUAGES,\n    renderItem: function renderItem(item) {\n      var selected = lang === item;\n      return __jsx(_List.Item, {\n        sytle: selected ? selectedItemStyle : null\n      }, selected ? __jsx(\"span\", {\n        className: \"jsx-4261653446\"\n      }, item) : __jsx(FilterLink, _extends({}, querys, {\n        lang: item,\n        name: item\n      })));\n    }\n  }), __jsx(_List, {\n    bordered: true,\n    header: __jsx(\"span\", {\n      className: \"jsx-4261653446\" + \" \" + \"list-header\"\n    }, \"\\u6392\\u5E8F\"),\n    dataSource: SORT_TYPES,\n    renderItem: function renderItem(item) {\n      var selected = false;\n\n      if (item.name === 'Best Match' && !sort) {\n        selected = true;\n      } else if (item.value === sort && item.order === order) {\n        selected = true;\n      }\n\n      return __jsx(_List.Item, {\n        style: selected ? selectedItemStyle : null\n      }, selected ? __jsx(\"span\", {\n        className: \"jsx-4261653446\"\n      }, item.name) : __jsx(FilterLink, _extends({}, querys, {\n        sort: item.value,\n        order: item.order,\n        name: item.name\n      })));\n    }\n  })), __jsx(_Col, {\n    span: 18\n  }, __jsx(\"h3\", {\n    className: \"jsx-4261653446\" + \" \" + \"repos-title\"\n  }, repos.total_count, \"\\u4E2ARepositories\"), repos.items.map(function (repo) {\n    return __jsx(Repo, {\n      repo: repo,\n      key: repo.id\n    });\n  }), __jsx(\"div\", {\n    className: \"jsx-4261653446\" + \" \" + \"pagination\"\n  }, __jsx(_Pagination, {\n    pageSize: per_page,\n    current: Number(page) || 1,\n    total: 1000,\n    onChange: noop,\n    itemRender: function itemRender(page, type, ol) {\n      var p = type === 'page' ? page : type === 'prev' ? page - 1 : page + 1;\n      var name = type === 'page' ? page : ol;\n      return __jsx(FilterLink, _extends({}, querys, {\n        page: p,\n        name: name\n      }));\n    }\n  })))), __jsx(_JSXStyle, {\n    id: \"4261653446\"\n  }, [\".root.jsx-4261653446{padding:20px 0;}\", \".list-header.jsx-4261653446{font-weight:800;font-size:16px;}\", \".repos-title.jsx-4261653446{border-bottom:1px solid #eee;font-size:24px;line-height:50px;}\", \".pagination.jsx-4261653446{padding:20px;text-align:center;}\"]));\n}\n\nSearch.getInitialProps = function _callee(_ref3) {\n  var ctx, _ctx$query, query, sort, lang, order, page, queryString, result;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          ctx = _ref3.ctx;\n          _ctx$query = ctx.query, query = _ctx$query.query, sort = _ctx$query.sort, lang = _ctx$query.lang, order = _ctx$query.order, page = _ctx$query.page;\n\n          if (query) {\n            _context.next = 4;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            repos: {\n              total_count: 0\n            }\n          });\n\n        case 4:\n          queryString = \"?q=\".concat(query);\n          if (lang) queryString += \"+language:\".concat(lang);\n          if (sort) queryString += \"&sort=\".concat(sort, \"&order=\").concat(order || 'desc');\n          if (page) queryString += \"&page=\".concat(page);\n          queryString += \"&per_page=\".concat(per_page);\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(api.request({\n            url: \"/search/repositories\".concat(queryString)\n          }, ctx.req, ctx.res));\n\n        case 11:\n          result = _context.sent;\n          return _context.abrupt(\"return\", {\n            repos: result.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(Search);","map":null,"metadata":{},"sourceType":"module"}