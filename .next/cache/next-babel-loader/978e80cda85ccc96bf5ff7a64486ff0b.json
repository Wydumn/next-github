{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime-corejs2/regenerator\");\n\nvar axios = require('axios');\n\nvar github_base_url = 'https://api.github.com';\n\nfunction requestGithub(method, url, data, headers) {\n  return _regeneratorRuntime.async(function requestGithub$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios({\n            method: method,\n            url: \"\".concat(github_base_url).concat(url),\n            data: data,\n            headers: headers\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\n\nvar isServer = false;\n\nfunction request(_ref, req, res) {\n  var _ref$method, method, url, _ref$data, data, session, githubAuth, headers;\n\n  return _regeneratorRuntime.async(function request$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _ref$method = _ref.method, method = _ref$method === void 0 ? 'GET' : _ref$method, url = _ref.url, _ref$data = _ref.data, data = _ref$data === void 0 ? {} : _ref$data;\n\n          if (url) {\n            _context2.next = 3;\n            break;\n          }\n\n          throw Error('url must provide');\n\n        case 3:\n          if (!isServer) {\n            _context2.next = 13;\n            break;\n          }\n\n          session = req.session;\n          githubAuth = session.githubAuth || {};\n          headers = {};\n\n          if (githubAuth.access_token) {\n            headers['Authorization'] = \"\".concat(githubAuth.token_type, \" \").concat(githubAuth.access_token);\n          }\n\n          _context2.next = 10;\n          return _regeneratorRuntime.awrap(requestGithub(method, url, data, headers));\n\n        case 10:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 13:\n          _context2.next = 15;\n          return _regeneratorRuntime.awrap(axios({\n            method: method,\n            url: \"/github\".concat(url),\n            data: data\n          }));\n\n        case 15:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n}\n\nmodule.exports = {\n  request: request,\n  requestGithub: requestGithub\n};","map":{"version":3,"sources":["D:/Project/interview/blog/lib/api.js"],"names":["axios","require","github_base_url","requestGithub","method","url","data","headers","isServer","request","req","res","Error","session","githubAuth","access_token","token_type","module","exports"],"mappings":";;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMC,eAAe,GAAG,wBAAxB;;AAEA,SAAeC,aAAf,CAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,EAAgDC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACiBP,KAAK,CAAC;AACfI,YAAAA,MAAM,EAANA,MADe;AAEfC,YAAAA,GAAG,YAAKH,eAAL,SAAuBG,GAAvB,CAFY;AAGfC,YAAAA,IAAI,EAAJA,IAHe;AAIfC,YAAAA,OAAO,EAAPA;AAJe,WAAD,CADtB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,IAAMC,QAAQ,QAAd;;AACA,SAAeC,OAAf,OAA2DC,GAA3D,EAAgEC,GAAhE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAyBP,MAAzB,EAAyBA,MAAzB,4BAAkC,KAAlC,gBAAyCC,GAAzC,QAAyCA,GAAzC,mBAA8CC,IAA9C,EAA8CA,IAA9C,0BAAqD,EAArD;;AAAA,cACSD,GADT;AAAA;AAAA;AAAA;;AAAA,gBAEcO,KAAK,CAAC,kBAAD,CAFnB;;AAAA;AAAA,eAKQJ,QALR;AAAA;AAAA;AAAA;;AAMcK,UAAAA,OANd,GAMwBH,GAAG,CAACG,OAN5B;AAOcC,UAAAA,UAPd,GAO2BD,OAAO,CAACC,UAAR,IAAsB,EAPjD;AAQcP,UAAAA,OARd,GAQwB,EARxB;;AASQ,cAAIO,UAAU,CAACC,YAAf,EAA6B;AACzBR,YAAAA,OAAO,CAAC,eAAD,CAAP,aAA8BO,UAAU,CAACE,UAAzC,cAAuDF,UAAU,CAACC,YAAlE;AACH;;AAXT;AAAA,2CAYqBZ,aAAa,CAACC,MAAD,EAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,CAZlC;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAcqBP,KAAK,CAAC;AACfI,YAAAA,MAAM,EAANA,MADe;AAEfC,YAAAA,GAAG,mBAAYA,GAAZ,CAFY;AAGfC,YAAAA,IAAI,EAAJA;AAHe,WAAD,CAd1B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBAW,MAAM,CAACC,OAAP,GAAiB;AACbT,EAAAA,OAAO,EAAPA,OADa;AAEbN,EAAAA,aAAa,EAAbA;AAFa,CAAjB","sourcesContent":["const axios = require('axios')\r\n\r\nconst github_base_url = 'https://api.github.com'\r\n\r\nasync function requestGithub(method, url, data, headers) {\r\n    return await axios({\r\n        method,\r\n        url: `${github_base_url}${url}`,\r\n        data,\r\n        headers\r\n    })\r\n}\r\n\r\n\r\nconst isServer = typeof window === 'undefined'\r\nasync function request({ method = 'GET', url, data = {} }, req, res) {\r\n    if (!url) { // url必须要存在\r\n        throw Error('url must provide')\r\n    }\r\n    \r\n    if (isServer) {\r\n        const session = req.session\r\n        const githubAuth = session.githubAuth || {}\r\n        const headers = {}\r\n        if (githubAuth.access_token) {\r\n            headers['Authorization'] = `${githubAuth.token_type} ${githubAuth.access_token}`\r\n        }\r\n        return await requestGithub(method, url, data, headers)\r\n    } else {\r\n        return await axios({\r\n            method,\r\n            url: `/github${url}`,\r\n            data\r\n        })\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    request,\r\n    requestGithub\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"script"}