{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport Router from 'next/router';\nimport 'antd/dist/antd.css';\nimport Layout from '../components/Layout';\nimport withRedux from '../lib/with-redux';\nimport PageLoading from '../components/PageLoading'; // App中封装了许多App的核心代码\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: false\n    });\n\n    _defineProperty(this, \"startLoading\", () => {\n      this.setState({\n        loading: true\n      });\n    });\n\n    _defineProperty(this, \"stopLoading\", () => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    Router.events.on('routerChangeStart', this.startLoading);\n    Router.events.on('routerChangeComplete', this.stopLoading);\n    Router.events.on('routerChangeError', this.stopLoading);\n  }\n\n  componentWillUnmount() {\n    Router.events.off('routerChangeStart', this.startLoading);\n    Router.events.off('routerChangeComplete', this.stopLoading);\n    Router.events.off('routerChangeError', this.stopLoading);\n  }\n\n  static async getInitialProps(ctx) {\n    const {\n      Component\n    } = ctx; // console.log('app初始化')\n\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props;\n    return __jsx(Provider, {\n      store: reduxStore\n    }, this.state.loading ? __jsx(PageLoading, null) : null, __jsx(Layout, null, __jsx(Component, pageProps)));\n  }\n\n}\n\nexport default withRedux(MyApp);","map":null,"metadata":{},"sourceType":"module"}