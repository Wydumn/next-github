{"ast":null,"code":"import _Tabs from \"antd/lib/tabs\";\nimport _Icon from \"antd/lib/icon\";\nimport _Button from \"antd/lib/button\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport getConfig from 'next/config';\nimport { connect } from 'react-redux';\nimport Router, { withRouter } from 'next/router';\nimport Repo from '../components/Repo';\n\nconst api = require('../lib/api');\n\nconst {\n  publicRuntimeConfig\n} = getConfig();\nlet cachedUserRepos, cachedUserStarredRepos;\n\nfunction Index({\n  userRepos,\n  userStarredRepos,\n  user,\n  router\n}) {\n  console.log(userRepos, userStarredRepos);\n  const tabKey = router.query.key || '1';\n\n  const handleTabChange = activeKey => {\n    Router.push(`/?key=${activeKey}`);\n  };\n\n  if (!user || !user.id) {\n    return __jsx(\"div\", {\n      className: \"jsx-2321875535\" + \" \" + 'root'\n    }, __jsx(\"p\", {\n      className: \"jsx-2321875535\"\n    }, \"\\u60A8\\u8FD8\\u6CA1\\u6709\\u767B\\u5F55\"), __jsx(_Button, {\n      type: \"primary\",\n      href: publicRuntimeConfig.OAUTH_URL\n    }, \"\\u70B9\\u51FB\\u767B\\u5F55\"), __jsx(_JSXStyle, {\n      id: \"2321875535\"\n    }, \".root.jsx-2321875535{height:400px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxQcm9qZWN0XFxpbnRlcnZpZXdcXGJsb2dcXHBhZ2VzXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2QjRCLEFBR3NDLGFBQ0EsMEVBQ1MsOEVBQ0MsbUdBQ0osNkZBQ3ZCIiwiZmlsZSI6IkQ6XFxQcm9qZWN0XFxpbnRlcnZpZXdcXGJsb2dcXHBhZ2VzXFxpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1dHRvbiwgSWNvbiwgVGFicyB9IGZyb20gJ2FudGQnXHJcbmltcG9ydCBnZXRDb25maWcgZnJvbSAnbmV4dC9jb25maWcnXHJcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCdcclxuaW1wb3J0IFJvdXRlciwgeyB3aXRoUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInXHJcblxyXG5pbXBvcnQgUmVwbyBmcm9tICcuLi9jb21wb25lbnRzL1JlcG8nXHJcblxyXG5jb25zdCBhcGkgPSByZXF1aXJlKCcuLi9saWIvYXBpJylcclxuXHJcbmNvbnN0IHsgcHVibGljUnVudGltZUNvbmZpZyB9ID0gZ2V0Q29uZmlnKClcclxuXHJcbmxldCBjYWNoZWRVc2VyUmVwb3MsIGNhY2hlZFVzZXJTdGFycmVkUmVwb3NcclxuXHJcbmZ1bmN0aW9uIEluZGV4ICh7IHVzZXJSZXBvcywgdXNlclN0YXJyZWRSZXBvcywgdXNlciwgcm91dGVyfSkge1xyXG4gICAgY29uc29sZS5sb2codXNlclJlcG9zLCB1c2VyU3RhcnJlZFJlcG9zKVxyXG5cclxuICAgIGNvbnN0IHRhYktleSA9IHJvdXRlci5xdWVyeS5rZXkgfHwgJzEnIFxyXG5cclxuICAgIGNvbnN0IGhhbmRsZVRhYkNoYW5nZSA9IChhY3RpdmVLZXkpID0+IHtcclxuICAgICAgICBSb3V0ZXIucHVzaChgLz9rZXk9JHthY3RpdmVLZXl9YClcclxuICAgIH1cclxuXHJcbiAgICBpZiAoIXVzZXIgfHwgIXVzZXIuaWQpIHtcclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncm9vdCc+XHJcbiAgICAgICAgICAgICAgICA8cD7mgqjov5jmsqHmnInnmbvlvZU8L3A+XHJcbiAgICAgICAgICAgICAgICA8QnV0dG9uIHR5cGU9XCJwcmltYXJ5XCIgaHJlZj17cHVibGljUnVudGltZUNvbmZpZy5PQVVUSF9VUkx9PlxyXG4gICAgICAgICAgICAgICAgICAgIOeCueWHu+eZu+W9lVxyXG4gICAgICAgICAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgICAgICAgICAgLnJvb3Qge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDQwMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgICAgICB9ICAgIFxyXG4gICAgICAgICAgICAgICAgYH08L3N0eWxlPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvb3RcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1c2VyLWluZm9cIj5cclxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPXt1c2VyLmF2YXRhcl91cmx9IGFsdD1cInVzZXIgYXZhdGFyXCIgY2xhc3NOYW1lPVwiYXZhdGFyXCIgLz5cclxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImxvZ2luXCI+e3VzZXIubG9naW59PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibmFtZVwiPnt1c2VyLm5hbWV9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiYmlvXCI+e3VzZXIuYmlvfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cImVtYWlsXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPEljb24gdHlwZT1cIm1haWxcIiBzdHlsZT17eyBtYXJnaW5SaWdodDogMTAgfX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPXtgbWFpbHRvOiR7dXNlci5lbWFpbH1gfT57dXNlci5lbWFpbH08L2E+XHJcbiAgICAgICAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInVzZXItcmVwb3NcIj5cclxuICAgICAgICAgICAgICAgIDxUYWJzIGFjdGl2ZUtleT17dGFiS2V5fSBvbkNoYW5nZT17aGFuZGxlVGFiQ2hhbmdlfSBhbmltYXRlZD17ZmFsc2V9PlxyXG4gICAgICAgICAgICAgICAgICAgIHsvKiBUYWJz5qCH562+6aG177yM6YCJ6aG55Y2h5YiH5o2i57uE5Lu2ICAgZGVmYXVsdEFjdGl2ZUtleem7mOiupOmAieS4reesrOS4gOmhuSBhY3RpdmVLZXnlvZPliY3mv4DmtLsgdGFiIOmdouadv+eahCBrZXkgYW5pbWF0ZWTmmK/lkKbkvb/nlKjliqjnlLvliIfmjaJUYWJzICAqL31cclxuICAgICAgICAgICAgICAgICAgICA8VGFicy5UYWJQYW5lIHRhYj1cIuS9oOeahOS7k+W6k1wiIGtleT1cIjFcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAge3VzZXJSZXBvcy5tYXAocmVwbyA9PiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8UmVwbyAgcmVwbz17cmVwb30gLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgKSl9XHJcbiAgICAgICAgICAgICAgICAgICAgPC9UYWJzLlRhYlBhbmU+XHJcbiAgICAgICAgICAgICAgICAgICAgPFRhYnMuVGFiUGFuZSB0YWI9XCLkvaDlhbPms6jnmoTku5PlupNcIiBrZXk9XCIyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHt1c2VyU3RhcnJlZFJlcG9zLm1hcChyZXBvID0+IChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxSZXBvIHJlcG89e3JlcG99IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgICAgICAgICAgIDwvVGFicy5UYWJQYW5lPlxyXG4gICAgICAgICAgICAgICAgPC9UYWJzPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgICAgICAgLnJvb3Qge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMjBweCAwO1xyXG4gICAgICAgICAgICAgICAgfSAgICBcclxuICAgICAgICAgICAgICAgIC51c2VyLWluZm8ge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDQwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgZmxleC1zaHJpbms6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLmxvZ2luIHtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogODAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLm5hbWUge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzc3NztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC5iaW8ge1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMzMzM7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAuYXZhdGFyIHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7ICBcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC51c2VyLXJlcG9zIHtcclxuICAgICAgICAgICAgICAgICAgICBmbGV4LWdyb3c6IDE7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIClcclxufVxyXG5cclxuY29uc3QgaXNTZXJ2ZXIgPSB0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJ1xyXG5JbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoeyBjdHgsIHJlZHV4U3RvcmUgfSkgPT4ge1xyXG4gICAgLy8gY29uc3QgcmVzdWx0ID0gYXdhaXQgYXhpb3NcclxuICAgIC8vICAgICAuZ2V0KCcvZ2l0aHViL3NlYXJjaC9yZXBvc2l0b3JpZXM/cT1yZWFjdCcpXHJcbiAgICAvLyAgICAgLnRoZW4ocmVzID0+IGNvbnNvbGUubG9nKHJlcykpXHJcblxyXG4gICAgY29uc3QgdXNlciA9IHJlZHV4U3RvcmUuZ2V0U3RhdGUoKS51c2VyXHJcbiAgICBpZiAoIXVzZXIgfHwgIXVzZXIuaWQpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBpc0xvZ2luOiBmYWxzZVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpZiAoIWlzU2VydmVyKSB7XHJcbiAgICAgICAgaWYgKGNhY2hlZFVzZXJTdGFycmVkUmVwb3MgJiYgY2FjaGVkVXNlclJlcG9zKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICB1c2VyUmVwb3M6IGNhY2hlZFVzZXJSZXBvcyxcclxuICAgICAgICAgICAgICAgIHVzZXJTdGFycmVkUmVwb3M6IGNhY2hlZFVzZXJTdGFycmVkUmVwb3MsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8vIOiOt+WPluS7k+W6k1xyXG4gICAgY29uc3QgdXNlclJlcG9zID0gYXdhaXQgYXBpLnJlcXVlc3Qoe1xyXG4gICAgICAgIHVybDogJy91c2VyL3JlcG9zJ1xyXG4gICAgfSwgY3R4LnJlcSwgY3R4LnJlcylcclxuXHJcbiAgICAvLyDojrflj5borqTor4HnlKjmiLdTdGFy55qE5LuT5bqTXHJcbiAgICBjb25zdCB1c2VyU3RhcnJlZFJlcG9zID0gYXdhaXQgYXBpLnJlcXVlc3Qoe1xyXG4gICAgICAgIHVybDogJy91c2VyL3N0YXJyZWQnXHJcbiAgICB9LCBjdHgucmVxLCBjdHgucmVzKVxyXG5cclxuICAgIC8vIOa1j+iniOWZqOerr+e8k+WtmOaVsOaNru+8iOeUqOaIt+iuv+mXruS6huivpemhtemdouWGjee8k+WtmOaVsOaNru+8ieWQpuWIme+8jOWPquimgeeZu+W9lei/h+ivpemhtemdou+8jOaXoOiuuuWTquS4queUqOaIt++8jOW+l+WIsOeahOaVsOaNrumDveaYr+WcqOacjeWKoeerr+W3sue7j+e8k+WtmOi/h+eahOaVsOaNru+8jOaVsOaNrumDveS4gOagt+S6hlxyXG4gICAgaWYgKCFpc1NlcnZlcikgeyAgICBcclxuICAgICAgICBjYWNoZWRVc2VyUmVwb3MgPSB1c2VyUmVwb3MuZGF0YVxyXG4gICAgICAgIGNhY2hlZFVzZXJTdGFycmVkUmVwb3MgPSB1c2VyU3RhcnJlZFJlcG9zLmRhdGFcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGlzTG9naW46IHRydWUsXHJcbiAgICAgICAgdXNlclJlcG9zOiB1c2VyUmVwb3MuZGF0YSxcclxuICAgICAgICB1c2VyU3RhcnJlZFJlcG9zOiB1c2VyU3RhcnJlZFJlcG9zLmRhdGFcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgd2l0aFJvdXRlcihjb25uZWN0KGZ1bmN0aW9uIG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICB1c2VyOiBzdGF0ZS51c2VyLFxyXG4gICAgfVxyXG59KShJbmRleCkpIl19 */\\n/*@ sourceURL=D:\\\\\\\\Project\\\\\\\\interview\\\\\\\\blog\\\\\\\\pages\\\\\\\\index.js */\"));\n  }\n\n  return __jsx(\"div\", {\n    className: \"jsx-2375105089\" + \" \" + \"root\"\n  }, __jsx(\"div\", {\n    className: \"jsx-2375105089\" + \" \" + \"user-info\"\n  }, __jsx(\"img\", {\n    src: user.avatar_url,\n    alt: \"user avatar\",\n    className: \"jsx-2375105089\" + \" \" + \"avatar\"\n  }), __jsx(\"span\", {\n    className: \"jsx-2375105089\" + \" \" + \"login\"\n  }, user.login), __jsx(\"span\", {\n    className: \"jsx-2375105089\" + \" \" + \"name\"\n  }, user.name), __jsx(\"span\", {\n    className: \"jsx-2375105089\" + \" \" + \"bio\"\n  }, user.bio), __jsx(\"p\", {\n    className: \"jsx-2375105089\" + \" \" + \"email\"\n  }, __jsx(_Icon, {\n    type: \"mail\",\n    style: {\n      marginRight: 10\n    }\n  }), __jsx(\"a\", {\n    href: `mailto:${user.email}`,\n    className: \"jsx-2375105089\"\n  }, user.email))), __jsx(\"div\", {\n    className: \"jsx-2375105089\" + \" \" + \"user-repos\"\n  }, __jsx(_Tabs, {\n    activeKey: tabKey,\n    onChange: handleTabChange,\n    animated: false\n  }, __jsx(_Tabs.TabPane, {\n    tab: \"\\u4F60\\u7684\\u4ED3\\u5E93\",\n    key: \"1\"\n  }, userRepos.map(repo => __jsx(Repo, {\n    repo: repo\n  }))), __jsx(_Tabs.TabPane, {\n    tab: \"\\u4F60\\u5173\\u6CE8\\u7684\\u4ED3\\u5E93\",\n    key: \"2\"\n  }, userStarredRepos.map(repo => __jsx(Repo, {\n    repo: repo\n  }))))), __jsx(_JSXStyle, {\n    id: \"2375105089\"\n  }, \".root.jsx-2375105089{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:20px 0;}.user-info.jsx-2375105089{width:200px;margin-right:40px;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.login.jsx-2375105089{font-weight:800;font-size:20px;margin-top:20px;}.name.jsx-2375105089{font-size:16px;color:#777;}.bio.jsx-2375105089{margin-top:20px;color:#333;}.avatar.jsx-2375105089{width:100%;border-radius:5px;}.user-repos.jsx-2375105089{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxQcm9qZWN0XFxpbnRlcnZpZXdcXGJsb2dcXHBhZ2VzXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxRXdCLEFBR2tDLEFBS0QsQUFPSSxBQUtELEFBSUMsQUFJTCxBQUlDLFdBSE0sQ0FwQkEsR0FZUCxDQUxJLEFBU0osVUFIZixDQUlBLEVBSUEsQ0FwQmtCLENBT0UsZ0JBQ3BCLHdCQWVBLEdBN0IyQixZQU9WLDBFQUNTLHVCQVBQLGVBQ25CLHdDQU9BIiwiZmlsZSI6IkQ6XFxQcm9qZWN0XFxpbnRlcnZpZXdcXGJsb2dcXHBhZ2VzXFxpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1dHRvbiwgSWNvbiwgVGFicyB9IGZyb20gJ2FudGQnXHJcbmltcG9ydCBnZXRDb25maWcgZnJvbSAnbmV4dC9jb25maWcnXHJcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCdcclxuaW1wb3J0IFJvdXRlciwgeyB3aXRoUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInXHJcblxyXG5pbXBvcnQgUmVwbyBmcm9tICcuLi9jb21wb25lbnRzL1JlcG8nXHJcblxyXG5jb25zdCBhcGkgPSByZXF1aXJlKCcuLi9saWIvYXBpJylcclxuXHJcbmNvbnN0IHsgcHVibGljUnVudGltZUNvbmZpZyB9ID0gZ2V0Q29uZmlnKClcclxuXHJcbmxldCBjYWNoZWRVc2VyUmVwb3MsIGNhY2hlZFVzZXJTdGFycmVkUmVwb3NcclxuXHJcbmZ1bmN0aW9uIEluZGV4ICh7IHVzZXJSZXBvcywgdXNlclN0YXJyZWRSZXBvcywgdXNlciwgcm91dGVyfSkge1xyXG4gICAgY29uc29sZS5sb2codXNlclJlcG9zLCB1c2VyU3RhcnJlZFJlcG9zKVxyXG5cclxuICAgIGNvbnN0IHRhYktleSA9IHJvdXRlci5xdWVyeS5rZXkgfHwgJzEnIFxyXG5cclxuICAgIGNvbnN0IGhhbmRsZVRhYkNoYW5nZSA9IChhY3RpdmVLZXkpID0+IHtcclxuICAgICAgICBSb3V0ZXIucHVzaChgLz9rZXk9JHthY3RpdmVLZXl9YClcclxuICAgIH1cclxuXHJcbiAgICBpZiAoIXVzZXIgfHwgIXVzZXIuaWQpIHtcclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncm9vdCc+XHJcbiAgICAgICAgICAgICAgICA8cD7mgqjov5jmsqHmnInnmbvlvZU8L3A+XHJcbiAgICAgICAgICAgICAgICA8QnV0dG9uIHR5cGU9XCJwcmltYXJ5XCIgaHJlZj17cHVibGljUnVudGltZUNvbmZpZy5PQVVUSF9VUkx9PlxyXG4gICAgICAgICAgICAgICAgICAgIOeCueWHu+eZu+W9lVxyXG4gICAgICAgICAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgICAgICAgICAgLnJvb3Qge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDQwMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgICAgICB9ICAgIFxyXG4gICAgICAgICAgICAgICAgYH08L3N0eWxlPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvb3RcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1c2VyLWluZm9cIj5cclxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPXt1c2VyLmF2YXRhcl91cmx9IGFsdD1cInVzZXIgYXZhdGFyXCIgY2xhc3NOYW1lPVwiYXZhdGFyXCIgLz5cclxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImxvZ2luXCI+e3VzZXIubG9naW59PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibmFtZVwiPnt1c2VyLm5hbWV9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiYmlvXCI+e3VzZXIuYmlvfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cImVtYWlsXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPEljb24gdHlwZT1cIm1haWxcIiBzdHlsZT17eyBtYXJnaW5SaWdodDogMTAgfX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPXtgbWFpbHRvOiR7dXNlci5lbWFpbH1gfT57dXNlci5lbWFpbH08L2E+XHJcbiAgICAgICAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInVzZXItcmVwb3NcIj5cclxuICAgICAgICAgICAgICAgIDxUYWJzIGFjdGl2ZUtleT17dGFiS2V5fSBvbkNoYW5nZT17aGFuZGxlVGFiQ2hhbmdlfSBhbmltYXRlZD17ZmFsc2V9PlxyXG4gICAgICAgICAgICAgICAgICAgIHsvKiBUYWJz5qCH562+6aG177yM6YCJ6aG55Y2h5YiH5o2i57uE5Lu2ICAgZGVmYXVsdEFjdGl2ZUtleem7mOiupOmAieS4reesrOS4gOmhuSBhY3RpdmVLZXnlvZPliY3mv4DmtLsgdGFiIOmdouadv+eahCBrZXkgYW5pbWF0ZWTmmK/lkKbkvb/nlKjliqjnlLvliIfmjaJUYWJzICAqL31cclxuICAgICAgICAgICAgICAgICAgICA8VGFicy5UYWJQYW5lIHRhYj1cIuS9oOeahOS7k+W6k1wiIGtleT1cIjFcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAge3VzZXJSZXBvcy5tYXAocmVwbyA9PiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8UmVwbyAgcmVwbz17cmVwb30gLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgKSl9XHJcbiAgICAgICAgICAgICAgICAgICAgPC9UYWJzLlRhYlBhbmU+XHJcbiAgICAgICAgICAgICAgICAgICAgPFRhYnMuVGFiUGFuZSB0YWI9XCLkvaDlhbPms6jnmoTku5PlupNcIiBrZXk9XCIyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHt1c2VyU3RhcnJlZFJlcG9zLm1hcChyZXBvID0+IChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxSZXBvIHJlcG89e3JlcG99IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgICAgICAgICAgIDwvVGFicy5UYWJQYW5lPlxyXG4gICAgICAgICAgICAgICAgPC9UYWJzPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgICAgICAgLnJvb3Qge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMjBweCAwO1xyXG4gICAgICAgICAgICAgICAgfSAgICBcclxuICAgICAgICAgICAgICAgIC51c2VyLWluZm8ge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDQwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgZmxleC1zaHJpbms6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLmxvZ2luIHtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogODAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLm5hbWUge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzc3NztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC5iaW8ge1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMzMzM7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAuYXZhdGFyIHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7ICBcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC51c2VyLXJlcG9zIHtcclxuICAgICAgICAgICAgICAgICAgICBmbGV4LWdyb3c6IDE7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIClcclxufVxyXG5cclxuY29uc3QgaXNTZXJ2ZXIgPSB0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJ1xyXG5JbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoeyBjdHgsIHJlZHV4U3RvcmUgfSkgPT4ge1xyXG4gICAgLy8gY29uc3QgcmVzdWx0ID0gYXdhaXQgYXhpb3NcclxuICAgIC8vICAgICAuZ2V0KCcvZ2l0aHViL3NlYXJjaC9yZXBvc2l0b3JpZXM/cT1yZWFjdCcpXHJcbiAgICAvLyAgICAgLnRoZW4ocmVzID0+IGNvbnNvbGUubG9nKHJlcykpXHJcblxyXG4gICAgY29uc3QgdXNlciA9IHJlZHV4U3RvcmUuZ2V0U3RhdGUoKS51c2VyXHJcbiAgICBpZiAoIXVzZXIgfHwgIXVzZXIuaWQpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBpc0xvZ2luOiBmYWxzZVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpZiAoIWlzU2VydmVyKSB7XHJcbiAgICAgICAgaWYgKGNhY2hlZFVzZXJTdGFycmVkUmVwb3MgJiYgY2FjaGVkVXNlclJlcG9zKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICB1c2VyUmVwb3M6IGNhY2hlZFVzZXJSZXBvcyxcclxuICAgICAgICAgICAgICAgIHVzZXJTdGFycmVkUmVwb3M6IGNhY2hlZFVzZXJTdGFycmVkUmVwb3MsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8vIOiOt+WPluS7k+W6k1xyXG4gICAgY29uc3QgdXNlclJlcG9zID0gYXdhaXQgYXBpLnJlcXVlc3Qoe1xyXG4gICAgICAgIHVybDogJy91c2VyL3JlcG9zJ1xyXG4gICAgfSwgY3R4LnJlcSwgY3R4LnJlcylcclxuXHJcbiAgICAvLyDojrflj5borqTor4HnlKjmiLdTdGFy55qE5LuT5bqTXHJcbiAgICBjb25zdCB1c2VyU3RhcnJlZFJlcG9zID0gYXdhaXQgYXBpLnJlcXVlc3Qoe1xyXG4gICAgICAgIHVybDogJy91c2VyL3N0YXJyZWQnXHJcbiAgICB9LCBjdHgucmVxLCBjdHgucmVzKVxyXG5cclxuICAgIC8vIOa1j+iniOWZqOerr+e8k+WtmOaVsOaNru+8iOeUqOaIt+iuv+mXruS6huivpemhtemdouWGjee8k+WtmOaVsOaNru+8ieWQpuWIme+8jOWPquimgeeZu+W9lei/h+ivpemhtemdou+8jOaXoOiuuuWTquS4queUqOaIt++8jOW+l+WIsOeahOaVsOaNrumDveaYr+WcqOacjeWKoeerr+W3sue7j+e8k+WtmOi/h+eahOaVsOaNru+8jOaVsOaNrumDveS4gOagt+S6hlxyXG4gICAgaWYgKCFpc1NlcnZlcikgeyAgICBcclxuICAgICAgICBjYWNoZWRVc2VyUmVwb3MgPSB1c2VyUmVwb3MuZGF0YVxyXG4gICAgICAgIGNhY2hlZFVzZXJTdGFycmVkUmVwb3MgPSB1c2VyU3RhcnJlZFJlcG9zLmRhdGFcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGlzTG9naW46IHRydWUsXHJcbiAgICAgICAgdXNlclJlcG9zOiB1c2VyUmVwb3MuZGF0YSxcclxuICAgICAgICB1c2VyU3RhcnJlZFJlcG9zOiB1c2VyU3RhcnJlZFJlcG9zLmRhdGFcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgd2l0aFJvdXRlcihjb25uZWN0KGZ1bmN0aW9uIG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICB1c2VyOiBzdGF0ZS51c2VyLFxyXG4gICAgfVxyXG59KShJbmRleCkpIl19 */\\n/*@ sourceURL=D:\\\\\\\\Project\\\\\\\\interview\\\\\\\\blog\\\\\\\\pages\\\\\\\\index.js */\"));\n}\n\nconst isServer = true;\n\nIndex.getInitialProps = async ({\n  ctx,\n  reduxStore\n}) => {\n  // const result = await axios\n  //     .get('/github/search/repositories?q=react')\n  //     .then(res => console.log(res))\n  const user = reduxStore.getState().user;\n\n  if (!user || !user.id) {\n    return {\n      isLogin: false\n    };\n  }\n\n  if (!isServer) {\n    if (cachedUserStarredRepos && cachedUserRepos) {\n      return {\n        userRepos: cachedUserRepos,\n        userStarredRepos: cachedUserStarredRepos\n      };\n    }\n  } // 获取仓库\n\n\n  const userRepos = await api.request({\n    url: '/user/repos'\n  }, ctx.req, ctx.res); // 获取认证用户Star的仓库\n\n  const userStarredRepos = await api.request({\n    url: '/user/starred'\n  }, ctx.req, ctx.res); // 浏览器端缓存数据（用户访问了该页面再缓存数据）否则，只要登录过该页面，无论哪个用户，得到的数据都是在服务端已经缓存过的数据，数据都一样了\n\n  if (!isServer) {\n    cachedUserRepos = userRepos.data;\n    cachedUserStarredRepos = userStarredRepos.data;\n  }\n\n  return {\n    isLogin: true,\n    userRepos: userRepos.data,\n    userStarredRepos: userStarredRepos.data\n  };\n};\n\nexport default withRouter(connect(function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n})(Index));","map":{"version":3,"sources":["D:/Project/interview/blog/pages/index.js"],"names":["getConfig","connect","Router","withRouter","Repo","api","require","publicRuntimeConfig","cachedUserRepos","cachedUserStarredRepos","Index","userRepos","userStarredRepos","user","router","console","log","tabKey","query","key","handleTabChange","activeKey","push","id","OAUTH_URL","avatar_url","login","name","bio","marginRight","email","map","repo","isServer","getInitialProps","ctx","reduxStore","getState","isLogin","request","url","req","res","data","mapStateToProps","state"],"mappings":";;;;;;AACA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,aAAnC;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAA0BP,SAAS,EAAzC;AAEA,IAAIQ,eAAJ,EAAqBC,sBAArB;;AAEA,SAASC,KAAT,CAAgB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,gBAAb;AAA+BC,EAAAA,IAA/B;AAAqCC,EAAAA;AAArC,CAAhB,EAA8D;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ,EAAuBC,gBAAvB;AAEA,QAAMK,MAAM,GAAGH,MAAM,CAACI,KAAP,CAAaC,GAAb,IAAoB,GAAnC;;AAEA,QAAMC,eAAe,GAAIC,SAAD,IAAe;AACnCnB,IAAAA,MAAM,CAACoB,IAAP,CAAa,SAAQD,SAAU,EAA/B;AACH,GAFD;;AAIA,MAAI,CAACR,IAAD,IAAS,CAACA,IAAI,CAACU,EAAnB,EAAuB;AACnB,WACI;AAAA,0CAAe;AAAf,OACI;AAAA;AAAA,8CADJ,EAEI;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,IAAI,EAAEhB,mBAAmB,CAACiB;AAAjD,kCAFJ;AAAA;AAAA,6kQADJ;AAiBH;;AAED,SACI;AAAA,wCAAe;AAAf,KACI;AAAA,wCAAe;AAAf,KACI;AAAK,IAAA,GAAG,EAAEX,IAAI,CAACY,UAAf;AAA2B,IAAA,GAAG,EAAC,aAA/B;AAAA,wCAAuD;AAAvD,IADJ,EAEI;AAAA,wCAAgB;AAAhB,KAAyBZ,IAAI,CAACa,KAA9B,CAFJ,EAGI;AAAA,wCAAgB;AAAhB,KAAwBb,IAAI,CAACc,IAA7B,CAHJ,EAII;AAAA,wCAAgB;AAAhB,KAAuBd,IAAI,CAACe,GAA5B,CAJJ,EAKI;AAAA,wCAAa;AAAb,KACI;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf;AAAzB,IADJ,EAEI;AAAG,IAAA,IAAI,EAAG,UAAShB,IAAI,CAACiB,KAAM,EAA9B;AAAA;AAAA,KAAkCjB,IAAI,CAACiB,KAAvC,CAFJ,CALJ,CADJ,EAWI;AAAA,wCAAe;AAAf,KACI;AAAM,IAAA,SAAS,EAAEb,MAAjB;AAAyB,IAAA,QAAQ,EAAEG,eAAnC;AAAoD,IAAA,QAAQ,EAAE;AAA9D,KAEI,YAAM,OAAN;AAAc,IAAA,GAAG,EAAC,0BAAlB;AAAyB,IAAA,GAAG,EAAC;AAA7B,KACKT,SAAS,CAACoB,GAAV,CAAcC,IAAI,IACf,MAAC,IAAD;AAAO,IAAA,IAAI,EAAEA;AAAb,IADH,CADL,CAFJ,EAOI,YAAM,OAAN;AAAc,IAAA,GAAG,EAAC,sCAAlB;AAA2B,IAAA,GAAG,EAAC;AAA/B,KACKpB,gBAAgB,CAACmB,GAAjB,CAAqBC,IAAI,IACtB,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA;AAAZ,IADH,CADL,CAPJ,CADJ,CAXJ;AAAA;AAAA,2nRADJ;AA+DH;;AAED,MAAMC,QAAQ,OAAd;;AACAvB,KAAK,CAACwB,eAAN,GAAwB,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAA+B;AACnD;AACA;AACA;AAEA,QAAMvB,IAAI,GAAGuB,UAAU,CAACC,QAAX,GAAsBxB,IAAnC;;AACA,MAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACU,EAAnB,EAAuB;AACnB,WAAO;AACHe,MAAAA,OAAO,EAAE;AADN,KAAP;AAGH;;AAED,MAAI,CAACL,QAAL,EAAe;AACX,QAAIxB,sBAAsB,IAAID,eAA9B,EAA+C;AAC3C,aAAO;AACHG,QAAAA,SAAS,EAAEH,eADR;AAEHI,QAAAA,gBAAgB,EAAEH;AAFf,OAAP;AAIH;AACJ,GAnBkD,CAsBnD;;;AACA,QAAME,SAAS,GAAG,MAAMN,GAAG,CAACkC,OAAJ,CAAY;AAChCC,IAAAA,GAAG,EAAE;AAD2B,GAAZ,EAErBL,GAAG,CAACM,GAFiB,EAEZN,GAAG,CAACO,GAFQ,CAAxB,CAvBmD,CA2BnD;;AACA,QAAM9B,gBAAgB,GAAG,MAAMP,GAAG,CAACkC,OAAJ,CAAY;AACvCC,IAAAA,GAAG,EAAE;AADkC,GAAZ,EAE5BL,GAAG,CAACM,GAFwB,EAEnBN,GAAG,CAACO,GAFe,CAA/B,CA5BmD,CAgCnD;;AACA,MAAI,CAACT,QAAL,EAAe;AACXzB,IAAAA,eAAe,GAAGG,SAAS,CAACgC,IAA5B;AACAlC,IAAAA,sBAAsB,GAAGG,gBAAgB,CAAC+B,IAA1C;AACH;;AAED,SAAO;AACHL,IAAAA,OAAO,EAAE,IADN;AAEH3B,IAAAA,SAAS,EAAEA,SAAS,CAACgC,IAFlB;AAGH/B,IAAAA,gBAAgB,EAAEA,gBAAgB,CAAC+B;AAHhC,GAAP;AAKH,CA3CD;;AA6CA,eAAexC,UAAU,CAACF,OAAO,CAAC,SAAS2C,eAAT,CAAyBC,KAAzB,EAAgC;AAC9D,SAAO;AACHhC,IAAAA,IAAI,EAAEgC,KAAK,CAAChC;AADT,GAAP;AAGH,CAJgC,CAAP,CAIvBH,KAJuB,CAAD,CAAzB","sourcesContent":["import { Button, Icon, Tabs } from 'antd'\r\nimport getConfig from 'next/config'\r\nimport { connect } from 'react-redux'\r\nimport Router, { withRouter } from 'next/router'\r\n\r\nimport Repo from '../components/Repo'\r\n\r\nconst api = require('../lib/api')\r\n\r\nconst { publicRuntimeConfig } = getConfig()\r\n\r\nlet cachedUserRepos, cachedUserStarredRepos\r\n\r\nfunction Index ({ userRepos, userStarredRepos, user, router}) {\r\n    console.log(userRepos, userStarredRepos)\r\n\r\n    const tabKey = router.query.key || '1' \r\n\r\n    const handleTabChange = (activeKey) => {\r\n        Router.push(`/?key=${activeKey}`)\r\n    }\r\n\r\n    if (!user || !user.id) {\r\n        return (\r\n            <div className='root'>\r\n                <p>您还没有登录</p>\r\n                <Button type=\"primary\" href={publicRuntimeConfig.OAUTH_URL}>\r\n                    点击登录\r\n                </Button>\r\n                <style jsx>{`\r\n                    .root {\r\n                        height: 400px;\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                    }    \r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"root\">\r\n            <div className=\"user-info\">\r\n                <img src={user.avatar_url} alt=\"user avatar\" className=\"avatar\" />\r\n                <span className=\"login\">{user.login}</span>\r\n                <span className=\"name\">{user.name}</span>\r\n                <span className=\"bio\">{user.bio}</span>\r\n                <p className=\"email\">\r\n                    <Icon type=\"mail\" style={{ marginRight: 10 }} />\r\n                    <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </p>\r\n            </div>\r\n            <div className=\"user-repos\">\r\n                <Tabs activeKey={tabKey} onChange={handleTabChange} animated={false}>\r\n                    {/* Tabs标签页，选项卡切换组件   defaultActiveKey默认选中第一项 activeKey当前激活 tab 面板的 key animated是否使用动画切换Tabs  */}\r\n                    <Tabs.TabPane tab=\"你的仓库\" key=\"1\">\r\n                        {userRepos.map(repo => (\r\n                            <Repo  repo={repo} />\r\n                        ))}\r\n                    </Tabs.TabPane>\r\n                    <Tabs.TabPane tab=\"你关注的仓库\" key=\"2\">\r\n                        {userStarredRepos.map(repo => (\r\n                            <Repo repo={repo} />\r\n                        ))}\r\n                    </Tabs.TabPane>\r\n                </Tabs>\r\n            </div>\r\n            <style jsx>{`\r\n                .root {\r\n                    display: flex;\r\n                    align-items: flex-start;\r\n                    padding: 20px 0;\r\n                }    \r\n                .user-info {\r\n                    width: 200px;\r\n                    margin-right: 40px;\r\n                    flex-shrink: 0;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                }\r\n                .login {\r\n                    font-weight: 800;\r\n                    font-size: 20px;\r\n                    margin-top: 20px;\r\n                }\r\n                .name {\r\n                    font-size: 16px;\r\n                    color: #777;\r\n                }\r\n                .bio {\r\n                    margin-top: 20px;\r\n                    color: #333;\r\n                }\r\n                .avatar {\r\n                    width: 100%;\r\n                    border-radius: 5px;  \r\n                }\r\n                .user-repos {\r\n                    flex-grow: 1;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst isServer = typeof window === 'undefined'\r\nIndex.getInitialProps = async ({ ctx, reduxStore }) => {\r\n    // const result = await axios\r\n    //     .get('/github/search/repositories?q=react')\r\n    //     .then(res => console.log(res))\r\n\r\n    const user = reduxStore.getState().user\r\n    if (!user || !user.id) {\r\n        return {\r\n            isLogin: false\r\n        }\r\n    }\r\n\r\n    if (!isServer) {\r\n        if (cachedUserStarredRepos && cachedUserRepos) {\r\n            return {\r\n                userRepos: cachedUserRepos,\r\n                userStarredRepos: cachedUserStarredRepos,\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // 获取仓库\r\n    const userRepos = await api.request({\r\n        url: '/user/repos'\r\n    }, ctx.req, ctx.res)\r\n\r\n    // 获取认证用户Star的仓库\r\n    const userStarredRepos = await api.request({\r\n        url: '/user/starred'\r\n    }, ctx.req, ctx.res)\r\n\r\n    // 浏览器端缓存数据（用户访问了该页面再缓存数据）否则，只要登录过该页面，无论哪个用户，得到的数据都是在服务端已经缓存过的数据，数据都一样了\r\n    if (!isServer) {    \r\n        cachedUserRepos = userRepos.data\r\n        cachedUserStarredRepos = userStarredRepos.data\r\n    }\r\n\r\n    return {\r\n        isLogin: true,\r\n        userRepos: userRepos.data,\r\n        userStarredRepos: userStarredRepos.data\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(function mapStateToProps(state) {\r\n    return {\r\n        user: state.user,\r\n    }\r\n})(Index))"]},"metadata":{},"sourceType":"module"}