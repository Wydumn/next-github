{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport createSore from '../store/store';\nvar isServer = typeof window === 'undefined';\nvar __NEXT_REUDX_STORE__ = '__NEXT_REUDX_STORE__';\n\nfunction getOrCreateStore(initialState) {\n  if (isServer) {\n    return createSore(initialState);\n  }\n\n  if (!window[__NEXT_REUDX_STORE__]) {\n    window[__NEXT_REUDX_STORE__] = createSore(initialState);\n  }\n\n  return window[__NEXT_REUDX_STORE__];\n}\n\nexport default (function (Comp) {\n  var WithReduxApp =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(WithReduxApp, _React$Component);\n\n    function WithReduxApp(props) {\n      var _this;\n\n      _classCallCheck(this, WithReduxApp);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(WithReduxApp).call(this, props));\n      _this.reduxStore = getOrCreateStore(props.initialReduxState);\n      return _this;\n    }\n\n    _createClass(WithReduxApp, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            Component = _this$props.Component,\n            pageProps = _this$props.pageProps,\n            rest = _objectWithoutProperties(_this$props, [\"Component\", \"pageProps\"]);\n\n        if (pageProps) {\n          pageProps.test = '123';\n        }\n\n        return React.createElement(Comp, _extends({\n          Component: Component,\n          pageProps: pageProps\n        }, rest, {\n          reduxStore: this.reduxStore\n        }));\n      }\n    }]);\n\n    return WithReduxApp;\n  }(React.Component);\n\n  WithReduxApp.getInitialProps =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(ctx) {\n      var reduxStore, req, session, appProps;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (isServer) {\n                // 只有在服务端才会处理session\n                req = ctx.ctx.req;\n                session = req.session;\n\n                if (session && session.userInfo) {\n                  console.log(session.userInfo);\n                  reduxStore = getOrCreateStore({\n                    // 传入用户初始数据\n                    user: session.userInfo\n                  });\n                } else {\n                  reduxStore = getOrCreateStore();\n                }\n              } else {\n                reduxStore = getOrCreateStore();\n              }\n\n              ctx.reduxStore = reduxStore;\n              appProps = {};\n\n              if (!(typeof Comp.getInitialProps === 'function')) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 6;\n              return Comp.getInitialProps(ctx);\n\n            case 6:\n              appProps = _context.sent;\n\n            case 7:\n              return _context.abrupt(\"return\", _objectSpread({}, appProps, {\n                initialReduxState: reduxStore.getState()\n              }));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return WithReduxApp;\n});","map":{"version":3,"sources":["D:/Project/interview/blog/lib/with-redux.js"],"names":["React","createSore","isServer","window","__NEXT_REUDX_STORE__","getOrCreateStore","initialState","Comp","WithReduxApp","props","reduxStore","initialReduxState","Component","pageProps","rest","test","getInitialProps","ctx","req","session","userInfo","console","log","user","appProps","getState"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AAEA,IAAMC,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAnC;AACA,IAAMC,oBAAoB,GAAG,sBAA7B;;AAEA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACtC,MAAIJ,QAAJ,EAAc;AACZ,WAAOD,UAAU,CAACK,YAAD,CAAjB;AACD;;AAED,MAAI,CAACH,MAAM,CAACC,oBAAD,CAAX,EAAmC;AACjCD,IAAAA,MAAM,CAACC,oBAAD,CAAN,GAA+BH,UAAU,CAACK,YAAD,CAAzC;AACD;;AACD,SAAOH,MAAM,CAACC,oBAAD,CAAb;AACD;;AAED,gBAAe,UAAAG,IAAI,EAAI;AAAA,MACfC,YADe;AAAA;AAAA;AAAA;;AAEnB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;AACA,YAAKC,UAAL,GAAkBL,gBAAgB,CAACI,KAAK,CAACE,iBAAP,CAAlC;AAFiB;AAGlB;;AALkB;AAAA;AAAA,+BAOV;AAAA,0BACmC,KAAKF,KADxC;AAAA,YACCG,SADD,eACCA,SADD;AAAA,YACYC,SADZ,eACYA,SADZ;AAAA,YAC0BC,IAD1B;;AAGP,YAAID,SAAJ,EAAe;AACbA,UAAAA,SAAS,CAACE,IAAV,GAAiB,KAAjB;AACD;;AAED,eACE,oBAAC,IAAD;AACE,UAAA,SAAS,EAAEH,SADb;AAEE,UAAA,SAAS,EAAEC;AAFb,WAGMC,IAHN;AAIE,UAAA,UAAU,EAAE,KAAKJ;AAJnB,WADF;AAQD;AAtBkB;;AAAA;AAAA,IACMV,KAAK,CAACY,SADZ;;AAyBrBJ,EAAAA,YAAY,CAACQ,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA+B,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAG7B,kBAAIf,QAAJ,EAAc;AAAI;AACRgB,gBAAAA,GADI,GACID,GAAG,CAACA,GADR,CACJC,GADI;AAENC,gBAAAA,OAFM,GAEID,GAAG,CAACC,OAFR;;AAIZ,oBAAIA,OAAO,IAAIA,OAAO,CAACC,QAAvB,EAAiC;AAC/BC,kBAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACC,QAApB;AACAV,kBAAAA,UAAU,GAAGL,gBAAgB,CAAC;AAAE;AAC9BkB,oBAAAA,IAAI,EAAEJ,OAAO,CAACC;AADc,mBAAD,CAA7B;AAGD,iBALD,MAKO;AACLV,kBAAAA,UAAU,GAAGL,gBAAgB,EAA7B;AACD;AACF,eAZD,MAYO;AACLK,gBAAAA,UAAU,GAAGL,gBAAgB,EAA7B;AACD;;AAEDY,cAAAA,GAAG,CAACP,UAAJ,GAAiBA,UAAjB;AAEIc,cAAAA,QArByB,GAqBd,EArBc;;AAAA,oBAsBzB,OAAOjB,IAAI,CAACS,eAAZ,KAAgC,UAtBP;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAuBVT,IAAI,CAACS,eAAL,CAAqBC,GAArB,CAvBU;;AAAA;AAuB3BO,cAAAA,QAvB2B;;AAAA;AAAA,iEA2BxBA,QA3BwB;AA4B3Bb,gBAAAA,iBAAiB,EAAED,UAAU,CAACe,QAAX;AA5BQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA/B;;AAAA;AAAA;AAAA;AAAA;;AAgCA,SAAOjB,YAAP;AACD,CA1DD","sourcesContent":["import React from 'react'\r\nimport createSore from '../store/store'\r\n\r\nconst isServer = typeof window === 'undefined'\r\nconst __NEXT_REUDX_STORE__ = '__NEXT_REUDX_STORE__'\r\n\r\nfunction getOrCreateStore(initialState) {\r\n  if (isServer) {\r\n    return createSore(initialState)\r\n  }\r\n\r\n  if (!window[__NEXT_REUDX_STORE__]) {\r\n    window[__NEXT_REUDX_STORE__] = createSore(initialState)\r\n  }\r\n  return window[__NEXT_REUDX_STORE__]\r\n}\r\n\r\nexport default Comp => {\r\n  class WithReduxApp extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.reduxStore = getOrCreateStore(props.initialReduxState)\r\n    }\r\n\r\n    render() {\r\n      const { Component, pageProps, ...rest } = this.props\r\n\r\n      if (pageProps) {\r\n        pageProps.test = '123'\r\n      }\r\n\r\n      return (\r\n        <Comp\r\n          Component={Component}\r\n          pageProps={pageProps}\r\n          {...rest}\r\n          reduxStore={this.reduxStore}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  WithReduxApp.getInitialProps = async ctx => {\r\n    let reduxStore\r\n\r\n    if (isServer) {   // 只有在服务端才会处理session\r\n      const { req } = ctx.ctx\r\n      const session = req.session\r\n\r\n      if (session && session.userInfo) {\r\n        console.log(session.userInfo)\r\n        reduxStore = getOrCreateStore({ // 传入用户初始数据\r\n          user: session.userInfo,\r\n        })\r\n      } else {\r\n        reduxStore = getOrCreateStore()\r\n      }\r\n    } else {\r\n      reduxStore = getOrCreateStore()\r\n    }\r\n\r\n    ctx.reduxStore = reduxStore\r\n\r\n    let appProps = {}\r\n    if (typeof Comp.getInitialProps === 'function') {\r\n      appProps = await Comp.getInitialProps(ctx)\r\n    }\r\n\r\n    return {\r\n      ...appProps,\r\n      initialReduxState: reduxStore.getState()\r\n    }\r\n  }\r\n\r\n  return WithReduxApp\r\n}"]},"metadata":{},"sourceType":"module"}